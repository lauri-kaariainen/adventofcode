{"mappings":"MAAA,MA4GMA,EAAU,CAAIC,EAAMC,EAAGC,KAC1BA,EACEC,MAAMF,EAAI,GACVG,MAAKC,GAASC,KAAKC,UAAUF,KAAWC,KAAKC,UAAUP,KA+G5D,MAEMQ,EAAK,CAAIC,EAAOC,EAAMC,EAAO,IACjCC,MAAMC,KAAK,CAACC,QAASJ,EAAOD,GAASE,EAAO,IAAE,CAAGI,EAAGd,IAAMQ,EAASR,EAAIU,aC7NhEK,KAAOC,GACa,oBAAbC,SAAkD,oBAAdC,WAC5CD,QAAQE,OAAOH,GACfE,SAASE,cAAc,OAAQC,WAAa,QAAUL,EAAKM,KAAK,MANxEL,QAAQE,IAAII,IAAWV,QACvBI,QAAQE,IAAIK,IAAeX,QASEW,IACJD,IADzB,MAoBME,EAAM,CAAIC,EAAcC,KAC1B,IAAKA,EAAMd,OACP,OAAOa,EACX,MAAME,EAAoBC,SAASF,EAAM,GAAGG,MAAM,KAAK,IACvD,OAAOL,EACHC,EAAMK,KAAKC,IACa,MAAhBL,EAAM,GAAG,GACLK,EAAMC,EAAIL,IACVI,EAAMC,EAAIL,GAAaI,EAAMC,EAAIL,IAIjCI,EAAME,EAAIN,IACVI,EAAME,EAAIN,GAAaI,EAAME,EAAIN,IAGlCI,KAEXL,EAAMzB,MAAM,KA4BdiC,EACFZ,IACEa,EAhE2B,CAC7BV,OADgBA,EAgESS,GA7DhBL,MAAM,QAAQ,GACdA,MAAM,MACNC,KAAKhC,IAAY,CACdmC,EAAGL,SAAS9B,EAAK+B,MAAM,KAAK,IAC5BG,EAAGJ,SAAS9B,EAAK+B,MAAM,KAAK,QAExCH,MACID,EACKI,MAAM,QAAQ,GACdA,MAAM,MACNC,KAAIM,GAAQA,EAAKP,MAAM,MAAM,MAb1B,IAAIJ,WAoFXF,IACL,MAAM,u0RAnBVT,EAAI,KACAU,EAAOW,EAAUV,MAAOU,EAAUT,MAAMzB,MAAM,EAAG,IAC5CoC,OAAOxC,GACPe,QAKTE,EAAI,KArCW,CAAIW,IACf,MAAMa,EAAehC,EACjB,EACAiC,KAAKC,OAAOf,EAAMK,KAAIW,GAAMA,EAAGT,MAE9BF,KAAIY,GACDpC,EAAM,EAAGiC,KAAKC,OAAOf,EAAMK,KAAIW,GAAMA,EAAGR,MACnCH,KAAIY,GAAK,QAYtB,OATAjB,EAAMkB,SAAQD,GAAKJ,EAAaI,EAAEV,GAAGU,EAAET,GAAK,MAC5CnB,EACIwB,EACKR,KAAIM,GAAQA,EAAKf,KAAK,MACtBA,KAAK,OAKPI,GAmBPmB,CAEIpB,EAAOW,EAAUV,MAAOU,EAAUT,OAC7BW,OAAOxC","sources":["../../helpmodule.js","src/index.ts"],"sourcesContent":["const find4 = (x, y, matrix, wantedChar) => {\n  wantedChar = wantedChar || 1;\n  let returnable = [];\n  if (x > 0 && x < matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === 0) {\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n  }\n  if (y > 0 && y < matrix.length - 1) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  } else if (y === 0) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n  } else if (y === matrix.length - 1) {\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  }\n  return returnable;\n};\n\nconst get8 = (x, y, matrix) => {\n  const positions = [\n    {y: y - 1, x: x - 1},\n    {y: y - 1, x: x},\n    {y: y - 1, x: x + 1},\n    {y: y, x: x + 1},\n    {y: y + 1, x: x + 1},\n    {y: y + 1, x: x},\n    {y: y + 1, x: x - 1},\n    {y: y, x: x - 1},\n  ]\n  const returnable = [];\n  positions.forEach(pos =>\n    matrix[pos.y] === undefined ? \"\" :\n      matrix[pos.y][pos.x] === undefined ? \"\" :\n        returnable\n          .push(matrix[pos.y][pos.x]));\n  return returnable;\n}\n\n\n\nconst num2letter = chr => String.fromCharCode(97 + chr);\n\nconst hex2bin = (hex, nulls) => {\n  const nullAmount = nulls || 4;\n  return (\n    [...Array(nullAmount)].map(e => \"0\").join(\"\") +\n    parseInt(hex, 16).toString(2)\n  ).substr(-nullAmount);\n};\n\nconst num2hex = num => num.toString(16);\n\nconst dec2bin = num => (num >>> 0).toString(2)\n\nconst bin2dec = binary => parseInt(binary, 2);\n\nconst swapPositions = (arr, index1, index2) => (\n  //console.log(arr, index1, index2),\n  ([arr[index1], arr[index2]] = [arr[index2], arr[index1]]), arr\n);\n\nconst insertValueAtMutating = (arr, index, newValue) => {\n  arr\n    .splice(index, 1, newValue);\n  // .map(e => e.map ? e.map(i => i) : e) //clone\n  return arr\n}\n\nconst arrayRotate = (arr, reverse) => (\n  reverse ? arr.unshift(arr.pop()) : arr.push(arr.shift()), arr\n);\n\nconst arrayRotateLeft = (arr) => (\n  arr.push(arr.shift()), arr\n);\nconst arrayRotateRight = (arr) => (\n  arr.unshift(arr.pop()), arr\n);\n\nconst trampoline = fn => {\n  while (typeof fn === \"function\") {\n    fn = fn();\n  }\n  return fn;\n};\n\nconst uniqueShallow = (item, i, arr) => !arr.slice(i + 1).includes(item);\n\nconst uniqueDeep = (item, i, arr) =>\n  !arr\n    .slice(i + 1)\n    .some(other => JSON.stringify(other) === JSON.stringify(item));\n\nconst combineMatrices = (larger, smaller) =>\n  larger\n    //clone\n    .map(e => e.map(i => i))\n    .map((largerLine, lineNum) => {\n      const startPoint = Math.floor(\n        (largerLine.length - smaller[0].length) / 2\n      );\n      if (lineNum >= startPoint && lineNum < larger.length - startPoint) {\n        return largerLine.map((char, charNum) => {\n          if (\n            charNum >= startPoint &&\n            charNum < largerLine.length - startPoint\n          ) {\n            return smaller[lineNum - startPoint][charNum - startPoint];\n          } else {\n            return char;\n          }\n        });\n      } else {\n        return largerLine;\n      }\n    });\n\nconst flatten = arr =>\n  arr.reduce(\n    (flat, toFlatten) =>\n      flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten),\n    []\n  );\n\nconst insert = function (array, i, ...rest) {\n  return array.slice(0, i).concat(rest, array.slice(i));\n}\n\nconst reduceSum = (acc, next) =>\n  acc + next;\n\nconst reduceMultiply = (acc, next) =>\n  acc * next;\n\nconst reduceFlatten = (acc, next) =>\n  acc.concat(next);\n\n\nconst permutations = xs => {\n  let ret = [];\n\n  for (let i = 0; i < xs.length; i = i + 1) {\n    let rest = permutations(xs.slice(0, i).concat(xs.slice(i + 1)));\n\n    if (!rest.length) {\n      ret.push([xs[i]])\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        ret.push([xs[i]].concat(rest[j]))\n      }\n    }\n  }\n  return ret;\n}\n\nconst returnUniqueAmountsAsObj = array =>\n  array.reduce((acc, val) => {  //amounts as an object\n    acc[val] = acc[val] === undefined ? 1 : acc[val] += 1;\n    return acc;\n  }, {});\n\nconst betweenOrEqual = (number, min, max) =>\n  number >= min && number <= max\n\nfunction gcd2(a, b) {\n  // Greatest common divisor of 2 integers\n  if (!b) return b === 0 ? a : NaN;\n  return gcd2(b, a % b);\n}\nfunction gcd(array) {\n  // Greatest common divisor of a list of integers\n  var n = 0;\n  for (var i = 0; i < array.length; ++i)\n    n = gcd2(array[i], n);\n  return n;\n}\nfunction lcm2(a, b) {\n  // Least common multiple of 2 integers\n  return a * b / gcd2(a, b);\n}\nfunction lcm(array) {\n  // Least common multiple of a list of integers\n  var n = 1;\n  for (var i = 0; i < array.length; ++i)\n    n = lcm2(array[i], n);\n  return n;\n}\nfunction mostFrequentElems(array) {\n  const mostCommon = array\n    .filter(uniqueShallow)\n    .sort((a, b) =>\n      array\n        .filter(e => e === b).length - array.filter(e => e === a).length)[0];\n\n  const mostCommonLength =\n    array.filter(e => e === mostCommon).length\n\n  return array\n    .filter(e => array.filter(another => another === e).length === mostCommonLength)\n    .filter(uniqueShallow)\n}\n\nconst transpose = m => m[0].map((x, i) => m.map(x => x[i]))\n\nconst range = (start, stop, step = 1) =>\n  Array.from({length: (stop - start) / step + 1}, (_, i) => start + (i * step));\n\n\n\nexport {\n  find4,\n  get8,\n  num2letter,\n  hex2bin,\n  num2hex,\n  dec2bin,\n  bin2dec,\n  swapPositions,\n  insertValueAtMutating,\n  arrayRotate,\n  arrayRotateLeft,\n  arrayRotateRight,\n  trampoline,\n  uniqueShallow,\n  uniqueDeep,\n  combineMatrices,\n  flatten,\n  insert,\n  reduceSum,\n  reduceMultiply,\n  reduceFlatten,\n  permutations,\n  returnUniqueAmountsAsObj,\n  betweenOrEqual,\n  lcm,\n  gcd,\n  mostFrequentElems,\n  transpose,\n  range\n}","import { uniqueDeep, range } from \"../../../helpmodule.js\";\r\nconsole.log(getInput().length);\r\nconsole.log(getTESTInput().length);\r\n\r\nfunction log(...args: any[]): void {\r\n    if (typeof (console) !== 'undefined' && typeof (document) !== 'undefined') {\r\n        console.log(...args);\r\n        document.querySelector('pre')!.innerHTML += \"<br/>\" + args.join(\" \");\r\n    }\r\n}\r\n\r\nconst testInputArr: string = getTESTInput();\r\nconst inputArr: string = getInput();\r\n\r\n\r\nconst parseInput = (input: string): { input: any[], folds: string[] } => ({\r\n    input:\r\n        input\r\n            .split(\"\\n\\n\")[0]\r\n            .split(\"\\n\")\r\n            .map((item: string): { x: number, y: number } => ({\r\n                x: parseInt(item.split(\",\")[0]),\r\n                y: parseInt(item.split(\",\")[1])\r\n            })),\r\n    folds:\r\n        input\r\n            .split(\"\\n\\n\")[1]\r\n            .split(\"\\n\")\r\n            .map(line => line.split(\"g \")[1])\r\n})\r\n\r\nconst doFold = (input: any[], folds: string[]): any[] => {\r\n    if (!folds.length)\r\n        return input;\r\n    const foldPoint: number = parseInt(folds[0].split(\"=\")[1])\r\n    return doFold(\r\n        input.map((point: { x: number, y: number }) => {\r\n            if (folds[0][0] === \"y\") {\r\n                if (point.y > foldPoint) {\r\n                    point.y = foldPoint - (point.y - foldPoint)\r\n                }\r\n            }\r\n            else {\r\n                if (point.x > foldPoint) {\r\n                    point.x = foldPoint - (point.x - foldPoint)\r\n                }\r\n            }\r\n            return point;\r\n        }),\r\n        folds.slice(1))\r\n}\r\n\r\nconst visualize = (input: any[]): any[] => {\r\n    const mutatingArea = range(\r\n        0,\r\n        Math.max(...input.map(el => el.y))\r\n    )\r\n        .map(e =>\r\n            range(0, Math.max(...input.map(el => el.x)))\r\n                .map(e => \".\"))\r\n\r\n\r\n    input.forEach(e => mutatingArea[e.y][e.x] = \"#\")\r\n    log(\r\n        mutatingArea\r\n            .map(line => line.join(\"\"))\r\n            .join(\"\\n\")\r\n\r\n    )\r\n\r\n\r\n    return input\r\n}\r\n\r\n\r\n\r\n\r\nconst arrInUse =\r\n    getInput();\r\nconst parsedObj = parseInput(arrInUse)\r\n\r\nlog(\"a:\",\r\n    doFold(parsedObj.input, parsedObj.folds.slice(0, 1))\r\n        .filter(uniqueDeep)\r\n        .length\r\n\r\n\r\n)\r\n\r\nlog(\"b:\",\r\n    visualize(\r\n\r\n        doFold(parsedObj.input, parsedObj.folds)\r\n            .filter(uniqueDeep)\r\n    )\r\n\r\n)\r\n\r\n\r\nfunction getTESTInput(): string {\r\n    return (\r\n        `6,10\r\n0,14\r\n9,10\r\n0,3\r\n10,4\r\n4,11\r\n6,0\r\n6,12\r\n4,1\r\n0,13\r\n10,12\r\n3,4\r\n3,0\r\n8,4\r\n1,10\r\n2,14\r\n8,10\r\n9,0\r\n\r\nfold along y=7\r\nfold along x=5`)\r\n}\r\n\r\nfunction getInput(): string {\r\n    return (\r\n\r\n        `218,593\r\n1176,617\r\n57,515\r\n806,674\r\n517,740\r\n402,553\r\n1118,53\r\n596,577\r\n473,147\r\n166,817\r\n149,154\r\n209,228\r\n170,159\r\n124,376\r\n960,481\r\n107,73\r\n646,313\r\n708,393\r\n1215,696\r\n706,780\r\n969,149\r\n686,189\r\n552,771\r\n523,322\r\n1058,789\r\n155,205\r\n616,782\r\n113,154\r\n1017,280\r\n15,352\r\n774,623\r\n649,633\r\n435,591\r\n353,638\r\n273,327\r\n1139,180\r\n763,821\r\n360,506\r\n219,432\r\n656,770\r\n499,124\r\n1081,691\r\n1079,68\r\n1012,204\r\n1146,665\r\n669,421\r\n192,558\r\n92,873\r\n626,477\r\n1250,435\r\n65,99\r\n790,36\r\n1208,795\r\n1290,634\r\n344,229\r\n1171,43\r\n179,154\r\n75,316\r\n398,788\r\n725,80\r\n793,694\r\n1146,217\r\n179,740\r\n848,841\r\n972,100\r\n1010,313\r\n495,399\r\n410,4\r\n442,315\r\n1222,75\r\n458,768\r\n10,100\r\n683,537\r\n994,570\r\n771,91\r\n1240,330\r\n417,201\r\n1280,828\r\n462,725\r\n795,204\r\n833,697\r\n1206,357\r\n164,217\r\n438,312\r\n161,621\r\n1154,497\r\n910,49\r\n236,704\r\n428,350\r\n338,100\r\n1215,870\r\n589,219\r\n956,245\r\n1299,752\r\n1139,409\r\n736,750\r\n70,564\r\n1266,847\r\n20,219\r\n1056,78\r\n688,488\r\n326,376\r\n445,666\r\n1086,829\r\n1155,205\r\n715,138\r\n484,455\r\n1010,649\r\n226,544\r\n460,710\r\n1032,616\r\n811,385\r\n756,126\r\n644,655\r\n518,693\r\n97,451\r\n671,800\r\n624,705\r\n336,303\r\n468,294\r\n356,652\r\n651,495\r\n869,546\r\n174,642\r\n1068,705\r\n708,365\r\n566,733\r\n950,164\r\n266,843\r\n435,562\r\n391,873\r\n391,294\r\n75,764\r\n38,112\r\n388,771\r\n149,201\r\n375,635\r\n972,794\r\n343,542\r\n1299,142\r\n1103,525\r\n192,753\r\n1063,441\r\n989,709\r\n8,329\r\n316,794\r\n524,96\r\n666,794\r\n822,705\r\n256,442\r\n708,281\r\n338,207\r\n31,273\r\n994,239\r\n1203,73\r\n170,567\r\n231,68\r\n1028,259\r\n1138,102\r\n1079,480\r\n944,289\r\n714,129\r\n935,635\r\n977,261\r\n443,54\r\n723,508\r\n376,651\r\n1032,894\r\n845,807\r\n237,621\r\n775,530\r\n393,123\r\n1006,413\r\n465,87\r\n579,578\r\n22,600\r\n580,341\r\n284,23\r\n328,128\r\n244,627\r\n10,794\r\n433,597\r\n684,240\r\n875,751\r\n994,155\r\n137,304\r\n984,742\r\n441,702\r\n1079,414\r\n776,142\r\n656,670\r\n1163,819\r\n321,633\r\n524,315\r\n65,219\r\n15,94\r\n1196,782\r\n1250,883\r\n136,649\r\n977,709\r\n709,887\r\n338,879\r\n1144,77\r\n801,210\r\n1196,392\r\n1057,241\r\n391,425\r\n602,393\r\n643,590\r\n669,429\r\n1039,544\r\n433,297\r\n1198,281\r\n408,638\r\n1220,190\r\n910,221\r\n254,845\r\n430,829\r\n790,277\r\n758,381\r\n758,323\r\n323,467\r\n500,291\r\n520,858\r\n951,808\r\n114,782\r\n186,600\r\n391,469\r\n1176,57\r\n894,628\r\n1176,277\r\n179,787\r\n8,113\r\n795,690\r\n290,707\r\n10,465\r\n1170,93\r\n301,591\r\n982,766\r\n1120,649\r\n813,633\r\n1174,649\r\n887,869\r\n806,884\r\n361,301\r\n383,350\r\n336,79\r\n236,515\r\n473,528\r\n333,521\r\n1258,689\r\n1203,521\r\n875,487\r\n498,371\r\n300,313\r\n244,267\r\n972,330\r\n770,782\r\n644,476\r\n976,887\r\n641,17\r\n149,714\r\n208,355\r\n902,638\r\n887,826\r\n1302,815\r\n518,439\r\n803,292\r\n932,429\r\n124,638\r\n997,730\r\n459,98\r\n1243,609\r\n505,180\r\n623,796\r\n539,257\r\n694,179\r\n1056,721\r\n641,473\r\n416,628\r\n1284,537\r\n1280,66\r\n172,792\r\n402,789\r\n1252,544\r\n1174,439\r\n11,752\r\n1158,291\r\n1240,620\r\n723,386\r\n244,4\r\n892,621\r\n58,765\r\n818,236\r\n1017,301\r\n753,651\r\n1148,0\r\n1235,764\r\n527,816\r\n115,637\r\n999,787\r\n1006,481\r\n500,739\r\n137,416\r\n1000,229\r\n997,25\r\n313,25\r\n508,229\r\n1156,326\r\n639,516\r\n672,411\r\n328,376\r\n930,134\r\n508,341\r\n226,350\r\n1161,180\r\n458,763\r\n900,420\r\n825,37\r\n728,704\r\n1084,544\r\n792,649\r\n808,575\r\n872,312\r\n113,516\r\n48,488\r\n831,640\r\n298,92\r\n23,379\r\n381,663\r\n674,315\r\n402,105\r\n417,649\r\n663,462\r\n500,313\r\n304,824\r\n514,861\r\n810,774\r\n669,249\r\n107,704\r\n1092,593\r\n969,297\r\n492,336\r\n147,819\r\n792,693\r\n1278,276\r\n107,821\r\n997,205\r\n1285,396\r\n728,67\r\n704,894\r\n1140,735\r\n1121,292\r\n423,205\r\n102,430\r\n408,644\r\n194,184\r\n294,612\r\n810,333\r\n582,827\r\n1158,603\r\n1262,488\r\n874,719\r\n728,827\r\n318,143\r\n492,457\r\n336,43\r\n940,871\r\n515,466\r\n293,525\r\n1115,86\r\n611,364\r\n509,646\r\n418,379\r\n462,753\r\n987,287\r\n639,110\r\n982,152\r\n464,693\r\n1086,571\r\n917,123\r\n1089,297\r\n1121,87\r\n238,628\r\n370,870\r\n1180,350\r\n169,814\r\n694,715\r\n411,621\r\n826,775\r\n134,617\r\n641,249\r\n887,733\r\n874,271\r\n410,474\r\n796,481\r\n1300,465\r\n21,399\r\n606,198\r\n837,147\r\n16,411\r\n975,14\r\n694,826\r\n638,483\r\n475,107\r\n1000,236\r\n622,406\r\n1031,707\r\n279,707\r\n666,655\r\n837,528\r\n763,143\r\n418,256\r\n957,254\r\n864,427\r\n668,296\r\n1141,485\r\n318,781\r\n1124,801\r\n207,369\r\n1103,369\r\n805,714\r\n333,709\r\n514,353\r\n1289,399\r\n820,889\r\n1294,859\r\n504,674\r\n974,751\r\n509,658\r\n1196,868\r\n1193,676\r\n893,693\r\n323,159\r\n508,105\r\n1196,726\r\n962,186\r\n957,638\r\n1176,53\r\n1037,215\r\n1074,190\r\n908,553\r\n818,620\r\n806,436\r\n1297,197\r\n671,107\r\n152,603\r\n147,75\r\n930,760\r\n917,347\r\n682,357\r\n13,136\r\n956,649\r\n1094,666\r\n927,544\r\n1203,780\r\n1049,323\r\n589,99\r\n90,190\r\n279,315\r\n80,108\r\n278,224\r\n343,339\r\n872,393\r\n812,371\r\n304,413\r\n423,752\r\n536,623\r\n632,152\r\n1277,299\r\n1156,120\r\n808,689\r\n1047,152\r\n380,312\r\n1102,243\r\n1280,466\r\n786,756\r\n606,616\r\n1121,864\r\n1171,690\r\n1176,858\r\n102,571\r\n463,705\r\n805,421\r\n88,523\r\n507,75\r\n808,700\r\n1208,717\r\n1260,653\r\n966,859\r\n649,261\r\n408,698\r\n1208,8\r\n276,465\r\n623,124\r\n48,539\r\n186,93\r\n852,518\r\n1066,267\r\n1039,246\r\n688,618\r\n341,205\r\n731,578\r\n624,369\r\n716,11\r\n509,864\r\n925,735\r\n313,369\r\n1123,242\r\n1154,103\r\n237,273\r\n793,154\r\n458,824\r\n1156,581\r\n835,107\r\n1280,156\r\n703,539\r\n310,236\r\n1210,495\r\n966,229\r\n192,165\r\n738,26\r\n192,865\r\n801,236\r\n694,292\r\n776,590\r\n1115,98\r\n134,841\r\n328,152\r\n1020,707\r\n306,708\r\n1300,239\r\n1302,49\r\n402,509\r\n400,49\r\n154,781\r\n1294,411\r\n202,627\r\n801,478\r\n137,694\r\n840,555\r\n801,248\r\n252,105\r\n354,581\r\n666,239\r\n48,691\r\n1091,407\r\n894,852\r\n1170,801\r\n624,189\r\n770,840\r\n666,877\r\n934,24\r\n504,884\r\n194,812\r\n502,351\r\n1186,289\r\n22,152\r\n117,666\r\n1210,47\r\n669,17\r\n917,508\r\n428,768\r\n540,782\r\n48,0\r\n812,343\r\n1118,841\r\n300,649\r\n509,248\r\n492,218\r\n1020,187\r\n869,254\r\n20,260\r\n1010,581\r\n802,105\r\n1051,485\r\n1282,169\r\n140,413\r\n1146,453\r\n238,42\r\n540,502\r\n842,801\r\n1002,126\r\n107,521\r\n3,847\r\n316,564\r\n557,451\r\n1002,19\r\n783,78\r\n929,663\r\n462,296\r\n1170,481\r\n892,414\r\n1146,441\r\n622,40\r\n736,556\r\n1156,113\r\n944,605\r\n418,862\r\n351,291\r\n540,616\r\n1154,819\r\n149,869\r\n1180,586\r\n17,80\r\n997,369\r\n509,684\r\n795,466\r\n972,739\r\n48,355\r\n418,173\r\n452,70\r\n848,764\r\n669,473\r\n596,544\r\n1148,894\r\n32,58\r\n567,81\r\n169,528\r\n274,582\r\n156,551\r\n1144,817\r\n848,729\r\n114,726\r\n360,282\r\n366,605\r\n1054,452\r\n117,676\r\n970,212\r\n554,126\r\n758,464\r\n190,439\r\n316,15\r\n294,724\r\n760,357\r\n1231,49\r\n107,780\r\n465,200\r\n370,471\r\n393,508\r\n1056,49\r\n934,870\r\n336,781\r\n1081,891\r\n13,249\r\n1238,221\r\n682,693\r\n114,294\r\n1133,19\r\n602,582\r\n31,546\r\n616,68\r\n624,817\r\n478,10\r\n735,49\r\n490,889\r\n1295,110\r\n637,366\r\n1295,784\r\n162,218\r\n790,150\r\n520,501\r\n425,651\r\n416,852\r\n1279,796\r\n867,840\r\n162,889\r\n803,75\r\n477,19\r\n443,502\r\n55,544\r\n410,627\r\n410,715\r\n880,795\r\n186,189\r\n79,397\r\n1066,362\r\n549,297\r\n1124,413\r\n815,831\r\n391,742\r\n616,715\r\n247,441\r\n935,259\r\n974,113\r\n1097,546\r\n518,201\r\n335,14\r\n266,11\r\n418,36\r\n269,603\r\n846,455\r\n867,54\r\n863,138\r\n52,666\r\n490,376\r\n899,441\r\n1034,465\r\n1108,376\r\n840,107\r\n468,600\r\n186,801\r\n949,301\r\n256,620\r\n267,84\r\n818,218\r\n507,448\r\n328,770\r\n1081,443\r\n1151,831\r\n458,394\r\n266,65\r\n130,579\r\n557,203\r\n190,201\r\n934,651\r\n1196,698\r\n316,155\r\n171,572\r\n535,530\r\n753,443\r\n801,684\r\n932,465\r\n1255,544\r\n632,742\r\n294,164\r\n820,5\r\n28,110\r\n788,514\r\n320,833\r\n1017,614\r\n1044,65\r\n1310,222\r\n1293,80\r\n656,124\r\n316,17\r\n293,593\r\n212,894\r\n892,379\r\n641,429\r\n566,371\r\n957,256\r\n687,124\r\n344,658\r\n304,600\r\n300,245\r\n328,681\r\n994,291\r\n721,219\r\n276,632\r\n908,789\r\n714,544\r\n1191,532\r\n929,231\r\n676,675\r\n852,70\r\n927,350\r\n882,544\r\n244,420\r\n1136,709\r\n1009,143\r\n964,126\r\n912,106\r\n1180,544\r\n1210,847\r\n1176,281\r\n1102,355\r\n1200,228\r\n552,878\r\n788,626\r\n8,565\r\n967,339\r\n44,399\r\n927,96\r\n792,245\r\n22,294\r\n477,697\r\n1118,878\r\n974,815\r\n316,330\r\n136,21\r\n468,93\r\n1297,136\r\n835,292\r\n507,292\r\n679,515\r\n208,651\r\n398,106\r\n1252,129\r\n960,152\r\n587,386\r\n502,82\r\n445,228\r\n1072,42\r\n1051,857\r\n647,462\r\n919,21\r\n114,698\r\n8,49\r\n698,442\r\n242,705\r\n694,68\r\n994,330\r\n0,661\r\n1174,887\r\n498,523\r\n815,63\r\n530,518\r\n1161,197\r\n1192,411\r\n192,617\r\n972,463\r\n1196,294\r\n55,256\r\n134,822\r\n146,665\r\n426,514\r\n639,94\r\n547,73\r\n1144,189\r\n1146,336\r\n196,192\r\n636,875\r\n758,8\r\n1215,472\r\n408,704\r\n520,764\r\n833,427\r\n972,291\r\n1200,540\r\n629,807\r\n900,250\r\n190,649\r\n802,341\r\n954,802\r\n622,488\r\n1223,81\r\n1215,422\r\n231,689\r\n177,19\r\n1251,756\r\n90,173\r\n311,784\r\n0,670\r\n974,781\r\n1049,508\r\n149,473\r\n923,362\r\n273,231\r\n646,329\r\n505,421\r\n1064,480\r\n293,369\r\n239,701\r\n952,290\r\n642,598\r\n48,616\r\n1154,551\r\n736,338\r\n589,795\r\n115,803\r\n1238,133\r\n994,794\r\n981,565\r\n987,875\r\n1268,136\r\n418,858\r\n1044,323\r\n808,319\r\n152,767\r\n793,620\r\n919,425\r\n790,501\r\n1043,362\r\n110,540\r\n616,292\r\n1054,620\r\n520,277\r\n599,798\r\n1052,836\r\n836,217\r\n659,47\r\n887,434\r\n417,693\r\n1108,32\r\n393,771\r\n42,136\r\n1091,880\r\n146,546\r\n48,406\r\n666,17\r\n331,399\r\n338,291\r\n336,403\r\n1064,644\r\n164,441\r\n359,546\r\n628,357\r\n616,112\r\n154,774\r\n171,322\r\n385,735\r\n843,652\r\n28,784\r\n1173,304\r\n930,312\r\n1073,273\r\n899,273\r\n0,672\r\n636,539\r\n266,571\r\n992,591\r\n709,551\r\n192,29\r\n775,362\r\n485,37\r\n313,730\r\n994,15\r\n651,47\r\n970,682\r\n254,78\r\n1064,414\r\n552,886\r\n313,205\r\n858,267\r\n130,138\r\n687,796\r\n112,281\r\n1310,770\r\n107,114\r\n1300,794\r\n644,346\r\n1208,571\r\n793,416\r\n673,366\r\n832,884\r\n1074,484\r\n962,708\r\n1206,537\r\n1136,642\r\n552,323\r\n721,99\r\n359,348\r\n676,708\r\n154,313\r\n1148,218\r\n499,385\r\n30,66\r\n678,600\r\n1028,635\r\n502,689\r\n932,17\r\n1305,709\r\n1076,508\r\n435,143\r\n1191,362\r\n708,529\r\n1041,603\r\n\r\nfold along x=655\r\nfold along y=447\r\nfold along x=327\r\nfold along y=223\r\nfold along x=163\r\nfold along y=111\r\nfold along x=81\r\nfold along y=55\r\nfold along x=40\r\nfold along y=27\r\nfold along y=13\r\nfold along y=6`\r\n    );\r\n}\r\n"],"names":["$f5543be055ba0b53$export$8bad2c420e433e08","item","i","arr","slice","some","other","JSON","stringify","$f5543be055ba0b53$export$d02631cccf789723","start","stop","step","Array","from","length","_","$3c8f1a1c09db7dbb$var$log","args","console","document","log","querySelector","innerHTML","join","$3c8f1a1c09db7dbb$var$getInput","$3c8f1a1c09db7dbb$var$getTESTInput","$3c8f1a1c09db7dbb$var$doFold","input","folds","foldPoint","parseInt","split","map","point","y","x","$3c8f1a1c09db7dbb$var$arrInUse","$3c8f1a1c09db7dbb$var$parsedObj","line","filter","mutatingArea","Math","max","el","e","forEach","$3c8f1a1c09db7dbb$var$visualize"],"version":3,"file":"index.js.map"}