{"version":3,"sources":["../../../helpmodule.js","index.ts"],"names":["find4","x","y","matrix","wantedChar","returnable","length","push","get8","positions","forEach","pos","undefined","num2letter","chr","String","fromCharCode","hex2bin","hex","nulls","nullAmount","Array","map","e","join","parseInt","toString","substr","num2hex","num","dec2bin","bin2dec","binary","swapPositions","arr","index1","index2","insertValueAtMutating","index","newValue","splice","arrayRotate","reverse","unshift","pop","shift","arrayRotateLeft","arrayRotateRight","trampoline","fn","uniqueShallow","item","i","slice","includes","uniqueDeep","some","other","JSON","stringify","combineMatrices","larger","smaller","largerLine","lineNum","startPoint","Math","floor","char","charNum","flatten","reduce","flat","toFlatten","concat","isArray","insert","array","rest","reduceSum","acc","next","reduceMultiply","reduceFlatten","permutations","xs","ret","j","returnUniqueAmountsAsObj","val","betweenOrEqual","number","min","max","gcd2","a","b","NaN","gcd","n","lcm2","lcm","mostFrequentElems","mostCommon","filter","sort","mostCommonLength","another"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const find4 = (x, y, matrix, wantedChar) => {\n  wantedChar = wantedChar || 1;\n  let returnable = [];\n  if (x > 0 && x < matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === 0) {\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n  }\n  if (y > 0 && y < matrix.length - 1) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  } else if (y === 0) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n  } else if (y === matrix.length - 1) {\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  }\n  return returnable;\n};\n\nconst get8 = (x, y, matrix) => {\n  const positions = [\n    {y: y - 1, x: x - 1},\n    {y: y - 1, x: x},\n    {y: y - 1, x: x + 1},\n    {y: y, x: x + 1},\n    {y: y + 1, x: x + 1},\n    {y: y + 1, x: x},\n    {y: y + 1, x: x - 1},\n    {y: y, x: x - 1},\n  ]\n  const returnable = [];\n  positions.forEach(pos =>\n    matrix[pos.y] === undefined ? \"\" :\n      matrix[pos.y][pos.x] === undefined ? \"\" :\n        returnable\n          .push(matrix[pos.y][pos.x]));\n  return returnable;\n}\n\n\n\nconst num2letter = chr => String.fromCharCode(97 + chr);\n\nconst hex2bin = (hex, nulls) => {\n  const nullAmount = nulls || 4;\n  return (\n    [...Array(nullAmount)].map(e => \"0\").join(\"\") +\n    parseInt(hex, 16).toString(2)\n  ).substr(-nullAmount);\n};\n\nconst num2hex = num => num.toString(16);\n\nconst dec2bin = num => (num >>> 0).toString(2)\n\nconst bin2dec = binary => parseInt(binary, 2);\n\nconst swapPositions = (arr, index1, index2) => (\n  //console.log(arr, index1, index2),\n  ([arr[index1], arr[index2]] = [arr[index2], arr[index1]]), arr\n);\n\nconst insertValueAtMutating = (arr, index, newValue) => {\n  arr\n    .splice(index, 1, newValue);\n  // .map(e => e.map ? e.map(i => i) : e) //clone\n  return arr\n}\n\nconst arrayRotate = (arr, reverse) => (\n  reverse ? arr.unshift(arr.pop()) : arr.push(arr.shift()), arr\n);\n\nconst arrayRotateLeft = (arr) => (\n  arr.push(arr.shift()), arr\n);\nconst arrayRotateRight = (arr) => (\n  arr.unshift(arr.pop()), arr\n);\n\nconst trampoline = fn => {\n  while (typeof fn === \"function\") {\n    fn = fn();\n  }\n  return fn;\n};\n\nconst uniqueShallow = (item, i, arr) => !arr.slice(i + 1).includes(item);\n\nconst uniqueDeep = (item, i, arr) =>\n  !arr\n    .slice(i + 1)\n    .some(other => JSON.stringify(other) === JSON.stringify(item));\n\nconst combineMatrices = (larger, smaller) =>\n  larger\n    //clone\n    .map(e => e.map(i => i))\n    .map((largerLine, lineNum) => {\n      const startPoint = Math.floor(\n        (largerLine.length - smaller[0].length) / 2\n      );\n      if (lineNum >= startPoint && lineNum < larger.length - startPoint) {\n        return largerLine.map((char, charNum) => {\n          if (\n            charNum >= startPoint &&\n            charNum < largerLine.length - startPoint\n          ) {\n            return smaller[lineNum - startPoint][charNum - startPoint];\n          } else {\n            return char;\n          }\n        });\n      } else {\n        return largerLine;\n      }\n    });\n\nconst flatten = arr =>\n  arr.reduce(\n    (flat, toFlatten) =>\n      flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten),\n    []\n  );\n\nconst insert = function (array, i, ...rest) {\n  return array.slice(0, i).concat(rest, array.slice(i));\n}\n\nconst reduceSum = (acc, next) =>\n  acc + next;\n\nconst reduceMultiply = (acc, next) =>\n  acc * next;\n\nconst reduceFlatten = (acc, next) =>\n  acc.concat(next);\n\n\nconst permutations = xs => {\n  let ret = [];\n\n  for (let i = 0; i < xs.length; i = i + 1) {\n    let rest = permutations(xs.slice(0, i).concat(xs.slice(i + 1)));\n\n    if (!rest.length) {\n      ret.push([xs[i]])\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        ret.push([xs[i]].concat(rest[j]))\n      }\n    }\n  }\n  return ret;\n}\n\nconst returnUniqueAmountsAsObj = array =>\n  array.reduce((acc, val) => {  //amounts as an object\n    acc[val] = acc[val] === undefined ? 1 : acc[val] += 1;\n    return acc;\n  }, {});\n\nconst betweenOrEqual = (number, min, max) =>\n  number >= min && number <= max\n\nfunction gcd2(a, b) {\n  // Greatest common divisor of 2 integers\n  if (!b) return b === 0 ? a : NaN;\n  return gcd2(b, a % b);\n}\nfunction gcd(array) {\n  // Greatest common divisor of a list of integers\n  var n = 0;\n  for (var i = 0; i < array.length; ++i)\n    n = gcd2(array[i], n);\n  return n;\n}\nfunction lcm2(a, b) {\n  // Least common multiple of 2 integers\n  return a * b / gcd2(a, b);\n}\nfunction lcm(array) {\n  // Least common multiple of a list of integers\n  var n = 1;\n  for (var i = 0; i < array.length; ++i)\n    n = lcm2(array[i], n);\n  return n;\n}\nfunction mostFrequentElems(array) {\n  const mostCommon = array\n    .filter(uniqueShallow)\n    .sort((a, b) =>\n      array\n        .filter(e => e === b).length - array.filter(e => e === a).length)[0];\n\n  const mostCommonLength =\n    array.filter(e => e === mostCommon).length\n\n  return array\n    .filter(e => array.filter(another => another === e).length === mostCommonLength)\n    .filter(uniqueShallow)\n}\n\n\n\nexport {\n  find4,\n  get8,\n  num2letter,\n  hex2bin,\n  num2hex,\n  dec2bin,\n  bin2dec,\n  swapPositions,\n  insertValueAtMutating,\n  arrayRotate,\n  arrayRotateLeft,\n  arrayRotateRight,\n  trampoline,\n  uniqueShallow,\n  uniqueDeep,\n  combineMatrices,\n  flatten,\n  insert,\n  reduceSum,\n  reduceMultiply,\n  reduceFlatten,\n  permutations,\n  returnUniqueAmountsAsObj,\n  betweenOrEqual,\n  lcm,\n  gcd,\n  mostFrequentElems\n}","import { uniqueShallow, mostFrequentElems } from \"../../../helpmodule.js\";\r\n\r\n\r\ntype Food = {\r\n    allergens: string[],\r\n    ingredients: string[],\r\n}\r\n\r\nconst startTime = new Date().getTime()\r\n\r\nconst usedInput = getInput();\r\n\r\nconst allIngredients: string[] =\r\n    usedInput\r\n        .split(/\\s*\\n\\s*/g)\r\n        .flatMap((line: string) => line.split(\" (\")[0].split(\" \"))\r\n        .filter(uniqueShallow)\r\n\r\nconst inputAsObjects = (input: string): Food[] =>\r\n    input\r\n        .split(/\\s*\\n\\s*/g)\r\n        .map((line: string): Food => ({\r\n            allergens: line.split(\"(contains \")[1].split(\")\")[0].split(\", \"),\r\n            ingredients: line.split(\" (\")[0].split(\" \")\r\n        }))\r\n\r\nconst usedInputAsObjects = inputAsObjects(usedInput);\r\n\r\nconst allergens: string[] = usedInputAsObjects\r\n    .flatMap(e => e.allergens)\r\n    // .flatMap(e => e.split(\", \"))\r\n    .filter((e, i, arr) => !arr.slice(i + 1).includes(e));\r\n\r\nconst listWithAllergensAndMostFrequentIngredients = allergens.map(all => ({\r\n    name: all,\r\n    // matches: inputAsObjects(usedInput).filter(e => e.allergens.includes(all)).flatMap(e => e.ingredients),\r\n    mostCommons: mostFrequentElems(usedInputAsObjects.filter(e => e.allergens.includes(all)).flatMap(e => e.ingredients))\r\n}))\r\n//foods that contain allergens, filtered by hand:\r\nconst allergenObject =\r\n    { peanuts: \"zmzq\", nuts: \"drbq\", wheat: \"rkcpxs\", eggs: \"xmmpt\", dairy: \"dpkvsdk\", sesame: \"mnrjrf\", shellfish: \"kjgl\", fish: \"cxjqxbt\" }\r\n\r\nconst ingredientsWithNoAllergens =\r\n    allIngredients.filter(ingr => !Object.values(allergenObject).includes(ingr))\r\n\r\n\r\nlog(\"a:\\n\",\r\n    ingredientsWithNoAllergens\r\n        .map((ingr: string): number =>\r\n            usedInputAsObjects.filter(line => line.ingredients.includes(ingr)).length)\r\n        .reduce((total: number, next) => total + next, 0)\r\n\r\n)\r\nlog(\"b:\",\r\n    Object.keys(allergenObject)\r\n        .sort()\r\n        .map(allergen => allergenObject[allergen as keyof typeof allergenObject])\r\n        .join(\",\")\r\n)\r\nlog(\r\n    \"everything took\",\r\n    new Date().getTime() - startTime,\r\n    \"ms\"\r\n)\r\n\r\nfunction log(...args: any[]): void {\r\n    if (typeof (console) !== 'undefined') {\r\n        console.log(...args);\r\n        document.querySelector('pre')!.innerHTML += \"<br/>\" + args.join(\" \");\r\n    }\r\n}\r\n\r\n\r\nfunction getTestInput(): string {\r\n    return (`mxmxvkd kfcds sqjhc nhms (contains dairy, fish)\r\n    trh fvjkl sbzzf mxmxvkd (contains dairy)\r\n    sqjhc fvjkl (contains soy)\r\n    sqjhc mxmxvkd sbzzf (contains fish)`)\r\n}\r\n\r\nfunction getInput(): string {\r\n    return (\r\n        `bbddn gkgvg csspt srm lffgc dpkvsdk gvcn vbk zhvfrl rnnsn xmmpt zltlhp zmzq jrgsgfb jdbcr vnvxb dzntt pjzmvrq mnrjrf nmxbgzp jbvhc pmvjg vgbrv hvtc vbkdkkfg cxjqxbt mxpsg bhsj jpqsk lhbj tzsr drbq kjgl bqprg nlrtm dfkmmb (contains peanuts, sesame, shellfish)\r\n        hvtc qtks zgzfp tprtg rkcpxs fmfsj pzhgbgm cxjqxbt tsbrr pkjhc njbz qsqvl dn skbm tqkt cqmlld mnrjrf jx pjzmvrq fzjz zhvfrl snvdgh grlclk vs tkrnqq gfz hgmb pqdpmn phmpskz ndb hvpnmp plgm dxfdt xmmpt glhjs mdnjkh lcvjkgp hdvt xzjjk kchndf lkncxkl bhsj kxhrx dpkvsdk xjr tdfr tsjxnmht qbfq hvnq drbq xgjsf cbpdq tcgk gvcn jrs dfkmmb lmjbg zskzx htzxnr ldszb zmzq xllbcpk nbnlj glchj vtfnl lvtdxj cqcdr nlrtm (contains nuts, dairy)\r\n        dfkmmb ftccm jdbcr vgbrv xmmpt pzhgbgm srm rkcpxs drbq ckjzjk kjgl knszm rmrpb bqprg grlclk lmjbg dmpnxx pjzmvrq dpkvsdk zskzx jhxfr lcgbz nlrtm qmxfsx bpth tsjxnmht scf fpsgzjk jfkltc ljvjmc jrgsgfb zgzfp dsqhb cnqjxst qktjs jhdbqk htzxnr kjmqh dxfdt pmch pmvjg nnkzh cqmlld rxqvp fstg cxjqxbt hvtc dzjznv fzjz zmzq jpqsk xbxbfq (contains fish, peanuts, eggs)\r\n        cqcdr hgmb nmxbgzp ncpcjs dzjznv ldszb cxjqxbt csspt hhpjtf hzktr zhvfrl tmnstvv qshtc vdcrrr knszm pqdpmn jpgsgz xjr kgctbt zkzlc ndb bsfd mnrjrf kcqz lnchnvz tmvd snvdgh kjpcp nhqnq njbz tcgk drbq zltlhp jkzv svbgn lzpmf qsqvl zskzx kjgl pckfr tzsr chqpzs mnmmbqt ghtt qmxfsx ftccm vcbxz plgm djndkb xllbcpk pmvjg ljvjmc dpkvsdk qssdvh jdbcr rkcpxs fstg zmzq rxqvp fmfsj fpsgzjk qdqdcm xhkngk vbkdkkfg hvtc rnnsn pkjhc dmpnxx cbrg (contains wheat, peanuts, shellfish)\r\n        kchndf zqtmj hgmb tzsr lnchnvz tsjxnmht kjgl kcntmgd zbqsk chqpzs hjxj skbm fmfsj knszm vnvxb cmmhk tsbrr pxbzrp dmpnxx mnrjrf shkd vgbrv jkzv bhsj ftccm rnqrg drbq lffgc nmxbgzp gfz zmzq jbdzbg rnnsn tdfr ttsmfm kjpcp jtgqb rmrpb svbgn kjmqh cqcdr bsfd qdqdcm cqmlld qbfq plq sqscg hvtc rlfd fpkzft qpvrq ckjzjk xmmpt dpkvsdk hvpnmp cxjqxbt lljl tcv kxhrx (contains peanuts, sesame, nuts)\r\n        zzgfr dpkvsdk hjxj qrvtbhj rkcpxs ndpmss gkgvg sdxsk hvpnmp kjgl vnvxb zpbd xmmpt dksprx jpqsk xdjmjl pxbzrp csspt ndb nbxjsxx fstg lljl zskzx lkncxkl cxjqxbt qtks xjr htzxnr jbdzbg qktjs jkzv rmrpb pckfr qbfq dsqhb knszm kgctbt xgjsf jrgsgfb njbz fpkzft ttsmfm jx zmzq pcnt jbvhc bbddn cqcdr bhsj hzktr mnrjrf gjjfrr jhdbqk rlfd cnqjxst vkbqls kjmqh (contains wheat, shellfish, peanuts)\r\n        ndpmss tzsr zqtmj jhxfr xmmpt bhsj drbq plgm rkcpxs hvpnmp qdqdcm gjjfrr vkbqls lcgbz zmzq kjgl shkd pzhgbgm cxjqxbt hjxj tcgk jrgsgfb lljl kcntmgd lkncxkl jhdbqk lhbj pqdpmn ghtt xjr fzjz hdvt zzgfr qmvlc zkzlc rmrpb pmch ncpcjs gffhns ttsmfm zskzx dmpnxx mtpjm xhkngk tsjxnmht dzjznv qdrt rqfpmm zxnrv tcv hjr cbrg gdpcgnc cjfdqs zbqsk pxbzrp tprtg mnrjrf qshtc nmxbgzp fmfsj (contains eggs, peanuts)\r\n        tdfr knszm pxbzrp blfnxq jfkltc drbq mxpsg kjpcp djndkb dpkvsdk ljvjmc llpmsz zmzq gkgvg qssdvh mnrjrf rlfd dzntt ckjzjk kcntmgd fmfsj svbgn jhdbqk dzjznv zpbd rqfpmm lljl qdqdcm sqscg mnmmbqt jbvhc lcgbz dsqhb gffhns rnnsn jpgsgz zskzx ns rxqvp ghtt xzjjk tmnstvv hvnq kxhrx pmvjg rkcpxs qtks pmch tzpvrq tsbrr njbz grlclk jnnhmlf lmjbg jrs qsqvl tzsr dxfdt pckfr kjgl pmfjd xhkngk vgbrv jdbcr xjf hjxj ljkt skbm nbnlj lffgc lnchnvz gfz xllbcpk zltlhp ttsmfm nhqnq bqprg phmpskz pkjhc cjfdqs kcqz jkzv xmmpt lcvjkgp (contains nuts, sesame, eggs)\r\n        mnrjrf jtgqb jfkltc lnchnvz cqcdr pcnt grlclk bbddn qsqvl rlfd tkrnqq gffhns knszm fpkzft dzjznv vgbrv hgmb mtpjm jx pjzmvrq zmzq dzntt hjr xjr kxhrx jnnhmlf hhpjtf pmch kjpcp vtfnl qtks csspt qpvrq rkcpxs tqkt pmfjd jhxfr plgm tzsr snvdgh nhqnq zqtmj hjxj tmvd jpgsgz hzktr lmjbg ns qshtc drbq pzhgbgm tdfr mnmmbqt xbxbfq zltlhp zfkf fstg vdcrrr dmpnxx dn tmnstvv lffgc lcvjkgp jrs fzjz ndb zpbd gjjfrr kcntmgd jbvhc bpth phmpskz fpsgzjk vcbxz xmmpt dfkmmb lvtdxj kjgl gvcn dpkvsdk rnqrg rxs (contains wheat, peanuts, nuts)\r\n        qdrt glchj hzktr kjgl pckfr hvnq tsjxnmht srm jnnhmlf qktjs qmxfsx rkcpxs vcbxz ckjzjk pxk tsbrr kgctbt knszm tmnstvv jkzv tprtg dpkvsdk fzjz bbddn nbnlj bqprg bhsj tsrqj nhqnq cxjqxbt zmzq zzgfr hjxj drbq ggsjrlb kchndf ljkt nbxjsxx scf zxnrv dksprx gfz dmpnxx xmmpt lkncxkl fstg vdcrrr tqkt zgzfp jtgqb zskzx (contains nuts)\r\n        zkzlc tprtg jpgsgz tsbrr ns jrs vnvxb hvpnmp cxhfpp vgbrv dxfdt gvcn tsjxnmht srm kjgl sdxsk pqdpmn pcnt llpmsz gjjfrr drbq blfnxq kcqz nbxjsxx tzpvrq pzhgbgm djndkb hhpjtf rkcpxs xmmpt dsqhb vhxnmt bqprg rnqrg qktjs grlclk tcgk jfkltc qtks nhqnq mnmmbqt xgjsf njbz mnrjrf mtpjm lkncxkl qbfq bpth mxpsg ggsjrlb tsrqj tzsr lcgbz dn jnnhmlf plq ftccm jhxfr ndb zmzq rnnsn zqtmj jbvhc xqjfdc qpvrq dzjznv lmjbg cxjqxbt sqscg hdvt rmrpb zzbh (contains nuts)\r\n        jkzv pxbzrp vcbxz cxjqxbt mxpsg plgm cmmhk zqtmj fpsgzjk bbddn rkcpxs hvnq rlfd qssdvh vtfnl tzpvrq qmxfsx lhbj vs tsrqj hvtc dpkvsdk dzntt pcnt jhxfr vbkdkkfg vkbqls drbq xmmpt hvpnmp zpbd tdfr pjzmvrq lkncxkl zzgfr nnkzh tsjxnmht grlclk nbxjsxx mnrjrf djndkb lcgbz kjgl (contains fish, eggs)\r\n        blfnxq xqjfdc lkncxkl zltlhp dpkvsdk cbpdq mdnjkh srm kjpcp kjgl svbgn plq fzjz drbq cxjqxbt jrgsgfb nbnlj vnvxb ljkt rkcpxs kcqz jpqsk xmmpt mnrjrf kjmqh pmch jfkltc hdvt rxs pxbzrp jhdbqk tcgk pqdpmn pcnt zskzx gffhns dn qshtc htzxnr sqscg zbqsk snvdgh qmxfsx jdbcr ldszb jkzv kgctbt mtpjm gdpcgnc lmjbg (contains sesame)\r\n        ns qrvtbhj kxhrx kcqz glhjs pzhgbgm mnrjrf vnvxb xzjjk pxbzrp gkgvg jnnhmlf jdbcr xhkngk nlrtm qsqvl vbkdkkfg jrs nmxbgzp zzgfr zgzfp csspt tmvd xdjmjl lvtdxj jtgqb cxjqxbt htzxnr djndkb bbddn qdrt zltlhp dzjznv vs tdfr vgbrv glchj njbz dfkmmb llpmsz rkcpxs plq chqpzs mnmmbqt xgjsf hjr phmpskz gffhns ljkt xbxbfq pmvjg sdxsk snvdgh lhbj tkrnqq dpkvsdk knszm lljl jfkltc xmmpt tcgk drbq pxk nbxjsxx dsqhb zxnrv qpvrq zhvfrl cqmlld tzsr kjgl (contains fish, sesame)\r\n        qsqvl qrvtbhj jhxfr shkd hvpnmp pqdpmn zzbh dfkmmb rnqrg jbdzbg rnnsn xzjjk lkncxkl lmjbg dpkvsdk lnchnvz tqkt glchj hhpjtf zmzq cxhfpp vcbxz zzgfr ndb cjfdqs snvdgh rkcpxs hzktr xdjmjl lljl zskzx jrgsgfb zltlhp fpkzft cxjqxbt fpsgzjk rmrpb tcgk chqpzs hjxj ttsmfm pxk llpmsz bhsj tsbrr plq xmmpt pzhgbgm dbgcsl tsrqj lzpmf jpgsgz mnrjrf bbddn hdvt cqmlld xqjfdc cmmhk ghtt cnqjxst pmfjd nmxbgzp njbz ckjzjk ljvjmc mxpsg jpqsk bpth qpvrq pkjhc gffhns tcv nbxjsxx ljkt pmch vbk vtfnl vbkdkkfg gjjfrr zfkf zbqsk lvtdxj pcnt drbq (contains fish, dairy, eggs)\r\n        tdfr rkcpxs kchndf cxjqxbt qdrt hzktr ljkt jbdzbg nmxbgzp kgctbt zfkf lhbj xqjfdc tzsr ldszb dpkvsdk kjmqh qshtc drbq zltlhp hvtc zmzq rnqrg zgzfp nbnlj dksprx vbk cbpdq pckfr bsfd cqmlld jrgsgfb hhpjtf shkd kjgl ftccm ttsmfm glhjs tqkt cqcdr zskzx pjzmvrq gdpcgnc xmmpt gffhns hjxj gkgvg vgbrv hjr kcntmgd cmmhk dxfdt zbqsk kxhrx ncpcjs lcvjkgp tzpvrq tsrqj ggsjrlb (contains nuts, peanuts)\r\n        zpbd pmvjg csspt xmmpt jpgsgz fpkzft ljkt plgm hdvt zzgfr rkcpxs kjgl hjr ckjzjk jbdzbg jkzv gvcn tdfr ns chqpzs mnmmbqt rmrpb xllbcpk zgzfp vhxnmt vbkdkkfg dpkvsdk bbddn hvpnmp svbgn cxjqxbt hzktr mnrjrf xzjjk tmnstvv htzxnr vnvxb hgmb kcntmgd thrrh vcbxz njbz cbpdq rxs grlclk pcnt sdxsk qssdvh zmzq llpmsz lzpmf xgjsf glhjs hhpjtf vkbqls zzbh pmch (contains shellfish, eggs, wheat)\r\n        ckjzjk vkbqls lljl vtfnl rkcpxs rmrpb ldszb xllbcpk bsfd tsrqj gkgvg cqcdr ghtt xmmpt nhqnq bqprg mnrjrf drbq lnchnvz qpvrq jfkltc cxjqxbt vbkdkkfg pqdpmn phmpskz cnqjxst dmpnxx pmvjg zgzfp zltlhp pjzmvrq vbk jnnhmlf pxbzrp grlclk qtks tsbrr rlfd bbddn hjxj zmzq xqjfdc qdqdcm vs dzjznv vdcrrr xzjjk qrvtbhj jbvhc hhpjtf pmch vcbxz zhvfrl qssdvh nlrtm tsjxnmht tcv kcqz dpkvsdk jkzv pcnt (contains sesame, nuts)\r\n        fstg blfnxq csspt dksprx pmfjd drbq cxhfpp jrgsgfb kjpcp kjmqh tmnstvv xdjmjl fpkzft tdfr zltlhp jbvhc hgmb hhpjtf zmzq zqtmj xllbcpk mnrjrf tkrnqq jtgqb zpbd lzpmf lnchnvz skbm ljkt vs snvdgh xgjsf ckjzjk pxk vbkdkkfg pzhgbgm kjgl vhxnmt pckfr bqprg cxjqxbt tcgk rkcpxs ljvjmc pmch pxbzrp mxpsg bpth hjr zgzfp tprtg qmvlc dxfdt dpkvsdk ndpmss ldszb hvnq tmvd qsqvl (contains wheat)\r\n        plq ftccm qssdvh bpth tsrqj fzjz zltlhp dzjznv mnrjrf qmvlc lmjbg drbq mtpjm tsbrr zqtmj lcgbz bhsj dn rkcpxs jhdbqk tdfr ckjzjk dpkvsdk jtgqb knszm cqcdr gdpcgnc pxbzrp cbpdq zzgfr jbvhc qdqdcm pjzmvrq cqmlld llpmsz jdbcr plgm cxjqxbt djndkb pcnt jkzv ghtt kjgl lkncxkl jrgsgfb dxfdt zmzq lcvjkgp csspt xjf hjr snvdgh gkgvg fmfsj pzhgbgm zfkf tmnstvv vdcrrr mnmmbqt jbdzbg ldszb phmpskz pmch blfnxq cbrg hzktr htzxnr (contains wheat, sesame)\r\n        jhdbqk tsbrr dzntt cmmhk plq ckjzjk gvcn gjjfrr hjxj cqcdr jrs pzhgbgm glchj jbvhc dbgcsl tzpvrq cxjqxbt svbgn sqscg mnmmbqt lvtdxj vbk jdbcr fmfsj rnnsn phmpskz zfkf dpkvsdk rmrpb kjpcp tzsr ghtt rkcpxs mnrjrf pxbzrp pckfr glhjs jbdzbg zhvfrl hhpjtf gkgvg zmzq tsrqj tmvd mdnjkh zqtmj skbm qktjs pqdpmn nmxbgzp rqfpmm pjzmvrq djndkb cqmlld dfkmmb pkjhc dsqhb xmmpt hvnq nbxjsxx zkzlc hvpnmp plgm ncpcjs zzbh jfkltc gffhns qtks zbqsk ttsmfm drbq sdxsk xdjmjl kcqz lzpmf qrvtbhj jrgsgfb zxnrv qdqdcm mxpsg (contains dairy, peanuts, sesame)\r\n        vgbrv tmnstvv kcntmgd nbxjsxx hvnq pxbzrp lkncxkl tcgk ggsjrlb zltlhp mnrjrf xmmpt tmvd ghtt xzjjk drbq lffgc cqcdr snvdgh kxhrx zzbh ndpmss nnkzh rmrpb dzjznv grlclk kjgl mtpjm rkcpxs ljvjmc vbk vbkdkkfg xgjsf gdpcgnc ljkt zmzq rxs qshtc bbddn cbpdq dxfdt lhbj qbfq gjjfrr qdrt bsfd dn zhvfrl hgmb pckfr xhkngk llpmsz pmch zbqsk tkrnqq cxjqxbt htzxnr knszm tzsr hhpjtf fpkzft sdxsk jtgqb (contains shellfish, wheat)\r\n        hhpjtf cmmhk zfkf rkcpxs pjzmvrq cxjqxbt xjf xmmpt bqprg lvtdxj ns rxqvp tsrqj pqdpmn pzhgbgm grlclk gffhns nlrtm hjxj lhbj sdxsk zhvfrl pxk tdfr plgm drbq zbqsk jnnhmlf djndkb cbpdq lcgbz gkgvg jkzv gfz ljvjmc jbvhc tsjxnmht dmpnxx cqmlld ftccm jdbcr hdvt fmfsj nbnlj gjjfrr vnvxb mnrjrf kjmqh cbrg xjr zzbh hvpnmp cqcdr zmzq lnchnvz rmrpb hvtc fzjz jrs qpvrq bbddn zkzlc qshtc dpkvsdk njbz ghtt ckjzjk lkncxkl fpsgzjk kcqz ndb vkbqls xgjsf (contains wheat)\r\n        jpqsk gfz tsjxnmht nlrtm sdxsk dmpnxx kxhrx vgbrv mdnjkh mnrjrf dsqhb tmnstvv skbm jhxfr bqprg zltlhp kchndf zzgfr zpbd pjzmvrq bbddn jnnhmlf zkzlc qdqdcm qbfq vs dzntt ndpmss bsfd lzpmf lcvjkgp dpkvsdk cnqjxst zmzq pmvjg qpvrq nbxjsxx xgjsf phmpskz ghtt zfkf fpsgzjk tsrqj jdbcr dxfdt lffgc qmvlc hzktr cbrg zzbh vnvxb pmch qmxfsx kjgl mnmmbqt drbq srm nbnlj bhsj plgm dfkmmb xmmpt jbvhc rnnsn svbgn zqtmj shkd zxnrv rkcpxs ljkt xjf tqkt ldszb fmfsj (contains wheat, dairy, nuts)\r\n        plq dpkvsdk hvpnmp mnrjrf zqtmj phmpskz svbgn xmmpt gvcn xdjmjl pmch tmvd srm xzjjk zbqsk kjmqh vkbqls vbkdkkfg pjzmvrq pmvjg shkd dxfdt kjgl thrrh jhdbqk rmrpb cbrg hvtc dksprx tcv lnchnvz qsqvl tdfr glchj zkzlc tsjxnmht pzhgbgm bhsj tkrnqq lvtdxj tzpvrq cqmlld htzxnr fpkzft zzgfr zgzfp skbm zpbd pxk pckfr zhvfrl zskzx pqdpmn dzjznv nhqnq qrvtbhj lffgc dn rxs snvdgh bpth qmxfsx xjf ggsjrlb kgctbt qbfq zmzq qdrt rnnsn csspt drbq ckjzjk gffhns glhjs kchndf rxqvp rkcpxs cxhfpp (contains shellfish)\r\n        vbkdkkfg qdrt vtfnl tzsr zltlhp nmxbgzp dmpnxx bsfd njbz vnvxb xjr mnrjrf cnqjxst fpsgzjk ncpcjs dksprx drbq rkcpxs ndpmss htzxnr zmzq jfkltc knszm ndb lhbj pxk fpkzft xdjmjl xjf xzjjk pjzmvrq bbddn sdxsk zxnrv hdvt skbm ftccm dzntt mxpsg jbdzbg ldszb zskzx cxjqxbt fzjz ckjzjk qmvlc kjgl dpkvsdk cbrg qmxfsx fstg qsqvl qssdvh lzpmf hgmb pckfr rxqvp (contains peanuts, shellfish)\r\n        hgmb zhvfrl zgzfp pmch lcgbz hvtc tmnstvv fpsgzjk rqfpmm rxqvp pcnt xjr kjmqh pkjhc cxjqxbt jnnhmlf jpqsk drbq nnkzh qbfq rxs dfkmmb nbxjsxx xjf dn cbrg tprtg kgctbt gdpcgnc kxhrx cxhfpp ldszb qsqvl zmzq vkbqls zltlhp phmpskz kjgl pmvjg fstg lnchnvz blfnxq mnrjrf mdnjkh vcbxz qmxfsx bsfd dpkvsdk gffhns cnqjxst bpth xmmpt cbpdq dksprx ndb lljl cqcdr (contains peanuts)\r\n        tsrqj kchndf ncpcjs rnqrg kjpcp tqkt ckjzjk gvcn htzxnr cxhfpp sdxsk zgzfp zskzx fpsgzjk qssdvh jnnhmlf zkzlc pmvjg glchj mnrjrf mxpsg qdrt fpkzft hvtc qmxfsx ljvjmc pmfjd csspt pcnt tprtg jrs llpmsz qdqdcm gffhns kgctbt thrrh ghtt rnnsn plgm hgmb qtks rlfd snvdgh dpkvsdk xmmpt djndkb bsfd zmzq zqtmj kjgl tmvd tcv ns gdpcgnc ljkt jx lnchnvz ldszb jhxfr svbgn tzpvrq jpqsk vgbrv vdcrrr bhsj tdfr jrgsgfb lcvjkgp fzjz rkcpxs rqfpmm drbq jbvhc (contains shellfish, eggs)\r\n        tqkt mnmmbqt kjgl rqfpmm qssdvh ghtt jbdzbg dn zzgfr kxhrx vkbqls lcvjkgp hvtc tcgk xzjjk rkcpxs cxjqxbt zqtmj xhkngk rxs zxnrv hgmb sdxsk tprtg dfkmmb dbgcsl xmmpt jbvhc cqcdr lnchnvz plgm rmrpb jrgsgfb rxqvp cbpdq jkzv gdpcgnc qdrt glchj tzsr pcnt vbkdkkfg lffgc thrrh ndb tsrqj hjr vhxnmt rlfd zltlhp jx dxfdt ttsmfm glhjs dzjznv pmfjd mxpsg vgbrv tsbrr bpth hzktr lcgbz kcntmgd nmxbgzp jhxfr ggsjrlb jnnhmlf gkgvg lmjbg drbq zmzq grlclk nhqnq jfkltc tzpvrq qmxfsx fpkzft vnvxb dksprx mdnjkh mnrjrf jpqsk (contains nuts, wheat, fish)\r\n        drbq chqpzs zfkf rkcpxs fmfsj xjf kjmqh qktjs lnchnvz blfnxq qshtc qtks zpbd xmmpt zbqsk kjgl ndpmss vdcrrr dpkvsdk kxhrx zskzx rqfpmm sqscg cmmhk ghtt pxk tqkt gfz cqcdr fzjz dzjznv zltlhp grlclk tkrnqq xgjsf pkjhc djndkb qbfq qrvtbhj jrs dsqhb csspt zmzq jrgsgfb cxjqxbt xdjmjl hhpjtf (contains wheat)\r\n        zmzq jpqsk dfkmmb hzktr vbk ggsjrlb plq ftccm bsfd hgmb nhqnq pmch zzbh cbpdq fstg dpkvsdk ckjzjk nmxbgzp kjmqh zltlhp rmrpb lzpmf tcv bhsj zskzx kjgl dsqhb pxk rxqvp pqdpmn lcgbz bqprg dksprx njbz ndpmss jhdbqk xjf gffhns jdbcr glhjs ghtt xllbcpk jbdzbg pzhgbgm zhvfrl hvnq srm pmvjg htzxnr dmpnxx lmjbg nlrtm gvcn xgjsf scf kchndf jnnhmlf fzjz rqfpmm jfkltc vbkdkkfg phmpskz nbxjsxx qpvrq tmvd llpmsz blfnxq mnrjrf xbxbfq xjr drbq lhbj vtfnl chqpzs fpsgzjk zpbd hvpnmp sqscg tprtg rkcpxs gjjfrr kxhrx tzsr zqtmj lffgc jrs kgctbt xmmpt hdvt cqcdr csspt jhxfr qdqdcm (contains sesame, peanuts)\r\n        dn rkcpxs xjf ggsjrlb zmzq kjgl zzbh hgmb zhvfrl tsjxnmht jdbcr ljvjmc kcntmgd skbm scf pmvjg jtgqb pmch cqmlld kcqz mtpjm vhxnmt mnrjrf bqprg dfkmmb tsbrr rxs pxbzrp sqscg hzktr cxjqxbt ndb xmmpt thrrh vcbxz vnvxb drbq pjzmvrq zgzfp ncpcjs pzhgbgm ttsmfm htzxnr lvtdxj tcv vgbrv qshtc (contains eggs, peanuts, fish)\r\n        jkzv xdjmjl nnkzh drbq njbz ttsmfm pcnt dfkmmb dpkvsdk bpth zkzlc tkrnqq cxjqxbt zltlhp lvtdxj zmzq rxqvp hvtc rqfpmm glhjs dzntt rmrpb zhvfrl xhkngk pxbzrp cbrg pzhgbgm hvnq hjr gdpcgnc gfz cxhfpp xjf cqmlld htzxnr hjxj hzktr gjjfrr jdbcr kcqz xmmpt jx qpvrq tsjxnmht pjzmvrq ckjzjk zbqsk rnnsn xzjjk kjgl rkcpxs csspt gffhns vcbxz vs jrs tsrqj cbpdq (contains eggs, wheat, dairy)\r\n        qmxfsx rlfd zgzfp drbq pcnt cxhfpp mdnjkh mnrjrf xjf zkzlc cxjqxbt xmmpt ljkt hdvt gfz tqkt tcv nbxjsxx bhsj pkjhc zfkf lmjbg fmfsj jdbcr lnchnvz rkcpxs grlclk zhvfrl ldszb tmvd qshtc ns jnnhmlf kjgl qsqvl snvdgh jx ncpcjs tkrnqq pmch fpkzft hvnq dbgcsl hhpjtf nlrtm fzjz cmmhk xqjfdc xjr pxk dpkvsdk (contains dairy, sesame, nuts)\r\n        tsjxnmht qtks gjjfrr lcgbz rkcpxs gkgvg lkncxkl dzntt dsqhb drbq bsfd dpkvsdk pcnt hjr glchj ggsjrlb zkzlc sqscg vs rnnsn ljkt jrs vkbqls pqdpmn nlrtm kjgl svbgn zmzq mnrjrf qpvrq jhdbqk dn cxjqxbt mtpjm blfnxq xdjmjl nmxbgzp fzjz scf xjr shkd jdbcr htzxnr vbk jnnhmlf zxnrv chqpzs (contains shellfish)`\r\n    );\r\n}\r\n"]}