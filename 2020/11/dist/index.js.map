{"version":3,"sources":["../../../helpmodule.js","index.ts"],"names":["find4","x","y","matrix","wantedChar","returnable","length","push","get8","positions","forEach","pos","undefined","num2letter","chr","String","fromCharCode","hex2bin","hex","nulls","nullAmount","Array","map","e","join","parseInt","toString","substr","num2hex","num","swapPositions","arr","index1","index2","insertValueAtMutating","index","newValue","splice","arrayRotate","reverse","unshift","pop","shift","trampoline","fn","uniqueShallow","item","i","slice","includes","uniqueDeep","some","other","JSON","stringify","combineMatrices","larger","smaller","largerLine","lineNum","startPoint","Math","floor","char","charNum","flatten","reduce","flat","toFlatten","concat","isArray","insert","array","rest","reduceSum","acc","next","reduceMultiply","reduceFlatten","permutations","xs","ret","j","returnUniqueAmountsAsObj","val","betweenOrEqual","number","min","max"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const find4 = (x, y, matrix, wantedChar) => {\n  wantedChar = wantedChar || 1;\n  let returnable = [];\n  if (x > 0 && x < matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === 0) {\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n  }\n  if (y > 0 && y < matrix.length - 1) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  } else if (y === 0) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n  } else if (y === matrix.length - 1) {\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  }\n  return returnable;\n};\n\nconst get8 = (x, y, matrix) => {\n  const positions = [\n    {y: y - 1, x: x - 1},\n    {y: y - 1, x: x},\n    {y: y - 1, x: x + 1},\n    {y: y, x: x + 1},\n    {y: y + 1, x: x + 1},\n    {y: y + 1, x: x},\n    {y: y + 1, x: x - 1},\n    {y: y, x: x - 1},\n  ]\n  const returnable = [];\n  positions.forEach(pos =>\n    matrix[pos.y] === undefined ? \"\" :\n      matrix[pos.y][pos.x] === undefined ? \"\" :\n        returnable\n          .push(matrix[pos.y][pos.x]));\n  return returnable;\n}\n\n\n\nconst num2letter = chr => String.fromCharCode(97 + chr);\n\nconst hex2bin = (hex, nulls) => {\n  const nullAmount = nulls || 4;\n  return (\n    [...Array(nullAmount)].map(e => \"0\").join(\"\") +\n    parseInt(hex, 16).toString(2)\n  ).substr(-nullAmount);\n};\n\nconst num2hex = num => num.toString(16);\n\nconst swapPositions = (arr, index1, index2) => (\n  //console.log(arr, index1, index2),\n  ([arr[index1], arr[index2]] = [arr[index2], arr[index1]]), arr\n);\n\nconst insertValueAtMutating = (arr, index, newValue) => {\n  arr\n    .splice(index, 1, newValue);\n  // .map(e => e.map ? e.map(i => i) : e) //clone\n  return arr\n}\n\n\nconst arrayRotate = (arr, reverse) => (\n  reverse ? arr.unshift(arr.pop()) : arr.push(arr.shift()), arr\n);\n\nconst trampoline = fn => {\n  while (typeof fn === \"function\") {\n    fn = fn();\n  }\n  return fn;\n};\n\nconst uniqueShallow = (item, i, arr) => !arr.slice(i + 1).includes(item);\n\nconst uniqueDeep = (item, i, arr) =>\n  !arr\n    .slice(i + 1)\n    .some(other => JSON.stringify(other) === JSON.stringify(item));\n\nconst combineMatrices = (larger, smaller) =>\n  larger\n    //clone\n    .map(e => e.map(i => i))\n    .map((largerLine, lineNum) => {\n      const startPoint = Math.floor(\n        (largerLine.length - smaller[0].length) / 2\n      );\n      if (lineNum >= startPoint && lineNum < larger.length - startPoint) {\n        return largerLine.map((char, charNum) => {\n          if (\n            charNum >= startPoint &&\n            charNum < largerLine.length - startPoint\n          ) {\n            return smaller[lineNum - startPoint][charNum - startPoint];\n          } else {\n            return char;\n          }\n        });\n      } else {\n        return largerLine;\n      }\n    });\n\nconst flatten = arr =>\n  arr.reduce(\n    (flat, toFlatten) =>\n      flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten),\n    []\n  );\n\nconst insert = function (array, i, ...rest) {\n  return array.slice(0, i).concat(rest, array.slice(i));\n}\n\nconst reduceSum = (acc, next) =>\n  acc + next;\n\nconst reduceMultiply = (acc, next) =>\n  acc * next;\n\nconst reduceFlatten = (acc, next) =>\n  acc.concat(next);\n\n\nconst permutations = xs => {\n  let ret = [];\n\n  for (let i = 0; i < xs.length; i = i + 1) {\n    let rest = permutations(xs.slice(0, i).concat(xs.slice(i + 1)));\n\n    if (!rest.length) {\n      ret.push([xs[i]])\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        ret.push([xs[i]].concat(rest[j]))\n      }\n    }\n  }\n  return ret;\n}\n\nconst returnUniqueAmountsAsObj = array =>\n  array.reduce((acc, val) => {  //amounts as an object\n    acc[val] = acc[val] === undefined ? 1 : acc[val] += 1;\n    return acc;\n  }, {});\n\nconst betweenOrEqual = (number, min, max) =>\n  number >= min && number <= max\n\nexport {\n  find4,\n  get8,\n  num2letter,\n  hex2bin,\n  num2hex,\n  swapPositions,\n  insertValueAtMutating,\n  arrayRotate,\n  trampoline,\n  uniqueShallow,\n  uniqueDeep,\n  combineMatrices,\n  flatten,\n  insert,\n  reduceSum,\n  reduceMultiply,\n  reduceFlatten,\n  permutations,\n  returnUniqueAmountsAsObj,\n  betweenOrEqual\n}","import { get8 } from \"../../../helpmodule.js\";\r\n\r\nconst get8Typed = (x: number, y: number, matrix: string[][]) => get8(x, y, matrix)\r\n\r\nenum Position {\r\n    EmptySeat = \"L\",\r\n    TakenSeat = \"#\",\r\n    Floor = \".\"\r\n}\r\n\r\nconst getSeenTakenSeatsA = (x: number, y: number, arr: string[][]): string[] =>\r\n    get8Typed(x, y, arr)\r\n        .filter((anotherSeat: string) => anotherSeat === Position.TakenSeat)\r\n\r\nconst getFirstSeenSeat = (rule: { addX: number, addY: number }, x: number, y: number, arr: string[][]): string =>\r\n    arr[y + rule.addY] === undefined ? \"\" :\r\n        arr[y + rule.addY][x + rule.addX] === undefined ? \"\" :\r\n            arr[y + rule.addY][x + rule.addX] === Position.Floor ?\r\n                getFirstSeenSeat(rule, x + rule.addX, y + rule.addY, arr) :\r\n                arr[y + rule.addY][x + rule.addX]\r\n\r\nconst getSeenTakenSeatsB = (x: number, y: number, arr: string[][]): string[] =>\r\n    [\r\n        { addX: -1, addY: -1 },\r\n        { addX: 0, addY: -1 },\r\n        { addX: 1, addY: -1 },\r\n        { addX: -1, addY: 0 },\r\n        { addX: 1, addY: 0 },\r\n        { addX: -1, addY: 1 },\r\n        { addX: 0, addY: 1 },\r\n        { addX: 1, addY: 1 }\r\n    ]\r\n        .map((rule: any): string =>\r\n            getFirstSeenSeat(\r\n                rule,\r\n                x, y, arr\r\n            ))\r\n        .filter((anotherSeat: string) => anotherSeat === Position.TakenSeat)\r\n\r\nconst recursivelyTakeSeats = (\r\n    inputMatrix: string[][],\r\n    lookingForBAnswer: boolean = false,\r\n    step = 0,\r\n    lastResult: string[][] = [[]],\r\n): string[][] => {\r\n    // console.log(step)\r\n    if (lastResult.map(line => line.join(\"\")).join(\"\") ===\r\n        inputMatrix.map(line => line.join(\"\")).join(\"\"))\r\n        return inputMatrix\r\n\r\n    return recursivelyTakeSeats(\r\n        inputMatrix\r\n            .map((line: string[], y: number, arr: string[][]): any =>\r\n                line.map((char: string, x: number): string =>\r\n                    char === Position.Floor ?\r\n                        char :\r\n                        char === Position.TakenSeat ?\r\n                            (lookingForBAnswer ?\r\n                                getSeenTakenSeatsB(x, y, arr) :\r\n                                getSeenTakenSeatsA(x, y, arr))\r\n                                .length >= (lookingForBAnswer ? 5 : 4) ?\r\n                                Position.EmptySeat :\r\n                                Position.TakenSeat :\r\n                            //char===Position.EmptySeat\r\n                            (lookingForBAnswer ?\r\n                                getSeenTakenSeatsB(x, y, arr) :\r\n                                getSeenTakenSeatsA(x, y, arr)).length ?\r\n                                Position.EmptySeat :\r\n                                Position.TakenSeat\r\n                )\r\n            ),\r\n        lookingForBAnswer,\r\n        step + 1,\r\n        inputMatrix.map(line => line.slice())\r\n    )\r\n}\r\nconst startTime = new Date().getTime()\r\n\r\nlog(\"a:\\n\",\r\n\r\n    recursivelyTakeSeats(\r\n        getInput()\r\n            .split(/\\s*\\n\\s*/)\r\n            .map(line => line.split(\"\")))\r\n        .map((line: string[]) => line.join(\"\")).join(\"\\n\")\r\n        //comment out below to show the last layout\r\n        .split(\"\\n\")\r\n        .map((line: string): number => line.split(\"\").filter((char: string) => char === Position.TakenSeat).length)\r\n        .reduce((a: number, b: number) => a + b, 0)\r\n)\r\n\r\nlog(\"b:\",\r\n    recursivelyTakeSeats(\r\n        getInput()\r\n            .split(/\\s*\\n\\s*/)\r\n            .map(line => line.split(\"\")), true)\r\n        .map((line: string[]) => line.join(\"\")).join(\"\\n\")\r\n        //comment out below to show the last layout\r\n        .split(\"\\n\")\r\n        .map((line: string): number => line.split(\"\").filter((char: string) => char === Position.TakenSeat).length)\r\n        .reduce((a: number, b: number) => a + b, 0)\r\n)\r\nlog(\r\n    \"everything took\",\r\n    new Date().getTime() - startTime,\r\n    \"ms\"\r\n)\r\n\r\nfunction log(...args: any[]): void {\r\n    if (typeof (console) !== 'undefined') {\r\n        console.log(...args);\r\n        document.querySelector('pre')!.innerHTML += \"<br/>\" + args.join(\" \");\r\n    }\r\n}\r\n\r\n\r\nfunction getTestInput(): string {\r\n    return (`L.LL.LL.LL\r\n    LLLLLLL.LL\r\n    L.L.L..L..\r\n    LLLL.LL.LL\r\n    L.LL.LL.LL\r\n    L.LLLLL.LL\r\n    ..L.L.....\r\n    LLLLLLLLLL\r\n    L.LLLLLL.L\r\n    L.LLLLL.LL`)\r\n}\r\n\r\nfunction getInput(): string {\r\n    return (\r\n        `LLLLLL.LLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLL.LLL.LLLL.LLLLLLLL.LLLLLLL.LLLLLLLLLLLLL..L.LLLLLL\r\n        LLLLLLLLLL..LLL.LLLLLLL.LLLLLLLLLLLLLLLLLL.LLL.LL.LLLLLLLL.LLLLLLLL.L.LLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LL.LLLLLLLLLLLLLLLLLLL.L.LLLLLL.LLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLL.LLLLLLL.L.LLLLLLLLL.LLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLLLLLLLL.L.LLLLLL\r\n        LLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLL.LLL.LLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLL.LLLLL.LLLLLLLLL.LLLLLLLLL.LL.LLL.LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLL.LLL.LLLLLLLLLL.LLLLLLLL\r\n        .LLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLL.LL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLL.L.LLLLLLLL.LLLL.LLL.LLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.L.LL.LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL..LLLLLLLLLLLLL.LLL.LLLL\r\n        ..LL....L.LL........L...L......LL..L.L........L....L..........L..L.........LLLL..L.L.L..LL...LL....\r\n        LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LL.LLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LL.LL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLL..LLLLLLLL.LLLLLLLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLL.LL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLL.LL.LLLLL.LLLLLLLL\r\n        L.L.........L..L..L.L....LLLL...LL..L....L.L..L..L.L.L.L........LL.L...........L........L..LLL...LL\r\n        LLLLLLLLLL.LLLLLLLLLLL.LL.LLLLLLLLL.LLLLLL.LLLL..LLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLL.L\r\n        LLLLLLLLLL.LLL..LLLLLLLLLLLLLLLLLLL..LLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLL.L.LLLLL..L.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLL.LL.LLLLLLLLL.LLLLLL.LLLLLL.LLLLLLLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLL.L.LLLLLLLL\r\n        LLLLLLLLLL.LLLL..LLLL.LLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL..LLLLLLLLLLLLLLL.LLLLLLLL.LLLLL.LLLLL.L.\r\n        LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLL.LL.LLL.LLLLLL.LLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\r\n        LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLL.L..LLLL.LLL.LLLLLL..LLLLLLLL.LLLLL..LLLLLL.\r\n        LLLLLLLLLL.LLLLLLL.LLLLLLLLLL.LLLLL.LLLLLLLLLLLLL..LLLLLLL.L.LLLLLLLLLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL..LLLLLLLL.LLLLLLLLLLLLLLLL.L.LL.LLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLL..LLLLLL.L.LL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL\r\n        LL...L.LL....L.LL.L.....L.LL......L.......L...........L.L..L.LL....LL..LLL.L.LL...........L...LLLL.\r\n        LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL..LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLL.LL.LLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.L..LLLLLLLL.LLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLL.L.LLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\r\n        LLLLLLLLLLLLLL..LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\r\n        LLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLL.LL.LLLLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLL.LLLLLL.L\r\n        LLLLLLLLLLLLLL..LLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLL.LL..LLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL.L.LLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        ...LL.LL.L....L....LLL..LL..L.....................L....LL..L...LL..L........LL.....L...........L..L\r\n        LLLLLLLLLL.LLLL..LLL.LLLL.LLLLLLLLL.LLLLLL..LLLLL.LLLLLLLL.LLLLLLLLLLLLLLL...LLLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLL.L.LLLLLLLLLL.L.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLL.L.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLL.LLL.LLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\r\n        LLLLLLLLLL.LLL..LLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLL.LLLL.LLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLLL.LL.LLL.LLL.LLLLLLLLLLL.LLLLLLLL.L.LLLLL.LLLLLLLL..LLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLL.LLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        .......LL.L.LL.....LL.L...L.L..LL..L...L..L.......LLLL....LL..LL.L...L...L...L..L.L.LL..L...L....L.\r\n        L.LLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL..LL..LLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLL.LLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLL.LLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\r\n        LLLLLLLLLL.LLLL..LLLLLLLL.LLLL.LLLLLLLL.LLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLL..LLLLLLLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLL.LLLLLLLLLLLL.LLLL.L.LLLLLLLLLLLL.L.LLLLLLLL\r\n        L..LLL..L........L.LL......L........LL.....L.L..LL...L......L...LL......L.L.....LL..L......L...L.LL\r\n        LL.LLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLL.LLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL..LLL..LLLLLLLL\r\n        LLLLLLLLLLLLLL..LLLL.LLLLLLLLLL.LLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLL.LLLLLLLLLLLLLLLLLL\r\n        .L...L...L..LLLLLLL.L.L..............L.LL..L.L..LLL...L......LL.L...LL.L.L.L..L....L..LLL..LL.L....\r\n        LLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLL.L.LLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLL.LLLL.LL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.L.LLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLL.L.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLL.LLLL.LLL.LLLLLLLL.LLLLLLLLLLLLLLLLL.LLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL..LLLLLLLLLLL..LL.LLLLLLL..LLLLLLL.LLLLLL.L.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LL.L.LLLLLLLLLLL.LLLLLLL.LLLLLL.LL.LLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLL.LL.LLLLLLLL\r\n        LLLLLLLLLL.LLLLLLLLL.LLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL..LLLLLLL.LLLLLLL.LLLLLLLLLLLL.L.L.LLLLLL\r\n        LLLLLLLLLL.LLLLLLLLLLLLLL..LLLLLLLLLLLL.LL.LLLLLL.LLLLLLLL.LLLLLLLL.LL..LLL.LLLLLLLL.LLLLLLLLLLLLL.\r\n        ....L.L..L......L.LL..L.L.LLL.L...L....LL.L..LL....LL.LL...LLL........L.LL..L...L..LL.LL..L...L...L\r\n        LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLL.L\r\n        L.LLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLL.L.LLLLLLLLLLLLLLLLLLLLLLLL.LL.LLLL.LL.LLL.L.LLLLLLL.LLLLLL\r\n        LLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLLLL.L.LLLLLLLLL.LLLLLLLLLL.LLLLLL.L\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLL.LLL.LLLLLL.LLLLLLLLLLLL.LL.LL.LLLLL.LLLLLLL..LLLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL\r\n        LLL.L.L.L..L...L...LL.L........LL..L..L.....L..L.LLL..L.L.L.L.LL..LLLL.L............L..........L...\r\n        LLLLLL.LLL.LLLL.L.LLLLLLLLLLLLLLLLL..LLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLL.L..LLLL.L.LLLLLL\r\n        LLLLLLLLLL.L.LLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLL.L..LLLLL.LLLLLLLLLLLLLLLL.LLLLL.LLLLLL.L\r\n        LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLL.\r\n        LLLLLLLLLL.LLLLLLLLLLLLLL.LLLLLLLLL..LLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLL.L\r\n        L.LLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLL.LL.LLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLL.LLL.LLLLLLLL.LLLLLL.LLLLLLL\r\n        LLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLL.LLLL.LLL.LLL.LLLL.LLLLLL..LLLLLLLLLLLLLL.LLLLLLLL\r\n        .....L..LLLL..LL....LLLL.LL..L..L...L.L...LL.L...L.........L.L..........L...L....L.L.LL.LL..LL.LL.L\r\n        LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLL.LL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLL.LLL\r\n        LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLLL.L.LLLLLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL\r\n        LLLLLLLLLL.LLLL.LLL.LL.LLLLLLLLLLLLLLL.LLL..LLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLLL\r\n        .L.LL........L...LL.LLL...............LL....L...L....LL.LLL...............L....L...L...L....L...L..\r\n        LLLLLLLLLLLLLLL.LLL.LLLLL.L.LLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLL.LL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLL.LLL.LLLLLLLLLLLLL..LLLLLLLL\r\n        LLLLLLL.L..LLLL.LLLLLLLLL..LLLLL.LL.LLLLLL.LLLLLL.LLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLL.L.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLL.LLLLL.LL.LLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLL..LLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLL..LL.L.L..LL.LL....LL..LL.LLL...L..LL...L..L....L......L.L..LLL.L....LLLL.LL....LL.LL.....L.L\r\n        LLLLLL.LLLLLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLL\r\n        LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLL.LL.LLLLLLL.LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLLLLLLLL.LLLLLLLLL.LLLLLL.LLLLLL.LLLLLLLLLLLLL.LLL.LLLLLL..LLLLLLLL.LLLLL.LLLLLLLL\r\n        LLLLLLLLLL.LLLL.LLL.LLLLL.LLLLLLLLL.LLLLLL.LLLLLL.LLLLLLLL.LL.LLLLL.LLLLLLLLLL.LLLLLLLLL.L.LLLLLLLL\r\n        .LLLLL.LLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLL.LLLLLLLL`\r\n    );\r\n}\r\n"]}