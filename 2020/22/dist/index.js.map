{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAAA,aAGA,IAAM,GAAY,IAAI,MAAO,UAEvB,EAAY,IAEZ,EACF,SADE,EACD,EACG,EACA,GACA,YADA,IAAA,IAAA,EAAA,GACC,EAAM,QAAW,EAAM,OAEpB,EACI,EAAM,GAAK,EAAM,GACb,EAAM,MAAM,GAAG,OAAO,CAAC,EAAM,GAAI,EAAM,KACvC,EAAM,MAAM,GAChB,EAAM,GAAK,EAAM,GACb,EAAM,MAAM,GAAG,OAAO,CAAC,EAAM,GAAI,EAAM,KACvC,EAAM,MAAM,GAChB,EAAO,GARX,CAAC,EAAO,IAcd,EACF,EACK,MAAM,iBAAiB,GACvB,MAAM,MACN,MAAM,GACN,IAAI,SAAC,GAAsB,OAAA,SAAS,KAEvC,EACF,EACK,MAAM,iBAAiB,GACvB,MAAM,MACN,MAAM,GACN,IAAI,SAAC,GAAsB,OAAA,SAAS,KAsB7C,SAAS,IAAI,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACgB,oBAAb,UACR,QAAQ,IAAG,MAAX,QAAe,GACf,SAAS,cAAc,OAAQ,WAAa,QAAU,EAAK,KAAK,MAKxE,SAAS,IACG,MAAA,wGAeZ,SAAS,IAED,MAAA,wnBA9CR,EAAI,OACA,KAAK,IAAG,MAAR,KAEI,EACI,EACA,GAEC,IAAI,SAAC,GAAyB,OAAA,EAC1B,IAAI,SAAC,EAAa,EAAG,GAAQ,OAAC,EAAI,OAAS,GAAK,IAChD,OAAO,SAAC,EAAG,GAAM,OAAA,EAAI,GAAG,OAEzC,EAAI,MAGJ,EACI,mBACA,IAAI,MAAO,UAAY,EACvB","file":"index.js","sourceRoot":"../src","sourcesContent":["// import { arrayRotateLeft } from \"../../../helpmodule.js\";\r\n\r\n\r\nconst startTime = new Date().getTime()\r\n\r\nconst usedInput = getInput();\r\n\r\nconst goThroughGame =\r\n    (deck1: number[],\r\n        deck2: number[],\r\n        step: number = 0): number[][] =>\r\n        !deck1.length || !deck2.length ?\r\n            [deck1, deck2] :\r\n            goThroughGame(\r\n                deck1[0] > deck2[0] ?\r\n                    deck1.slice(1).concat([deck1[0], deck2[0]]) :\r\n                    deck1.slice(1),\r\n                deck2[0] > deck1[0] ?\r\n                    deck2.slice(1).concat([deck2[0], deck1[0]]) :\r\n                    deck2.slice(1),\r\n                step + 1\r\n            )\r\n\r\n\r\n\r\n// const goThroughCards =\r\nconst deck1 =\r\n    usedInput\r\n        .split(/\\s*\\n\\s*\\n\\s*/)[0]\r\n        .split(\"\\n\")\r\n        .slice(1)\r\n        .map((e: string): number => parseInt(e))\r\n\r\nconst deck2 =\r\n    usedInput\r\n        .split(/\\s*\\n\\s*\\n\\s*/)[1]\r\n        .split(\"\\n\")\r\n        .slice(1)\r\n        .map((e: string): number => parseInt(e))\r\n\r\nlog(\"a:\\n\",\r\n    Math.max(\r\n        ...\r\n        goThroughGame(\r\n            deck1,\r\n            deck2\r\n        )\r\n            .map((resultDeck: number[]) => resultDeck\r\n                .map((num: number, i, arr) => (arr.length - i) * num)\r\n                .reduce((a, b) => a + b, 0)\r\n            )))\r\nlog(\"b:\",\r\n\r\n)\r\nlog(\r\n    \"everything took\",\r\n    new Date().getTime() - startTime,\r\n    \"ms\"\r\n)\r\n\r\nfunction log(...args: any[]): void {\r\n    if (typeof (console) !== 'undefined') {\r\n        console.log(...args);\r\n        document.querySelector('pre')!.innerHTML += \"<br/>\" + args.join(\" \");\r\n    }\r\n}\r\n\r\n\r\nfunction getTestInput(): string {\r\n    return (`Player 1:\r\n    9\r\n    2\r\n    6\r\n    3\r\n    1\r\n    \r\n    Player 2:\r\n    5\r\n    8\r\n    4\r\n    7\r\n    10`)\r\n}\r\n\r\nfunction getInput(): string {\r\n    return (\r\n        `Player 1:\r\n        15\r\n        31\r\n        26\r\n        4\r\n        36\r\n        30\r\n        43\r\n        39\r\n        50\r\n        21\r\n        25\r\n        46\r\n        6\r\n        44\r\n        12\r\n        20\r\n        23\r\n        9\r\n        48\r\n        11\r\n        16\r\n        42\r\n        17\r\n        13\r\n        10\r\n        \r\n        Player 2:\r\n        34\r\n        49\r\n        19\r\n        24\r\n        45\r\n        28\r\n        7\r\n        41\r\n        18\r\n        38\r\n        2\r\n        3\r\n        33\r\n        14\r\n        35\r\n        40\r\n        32\r\n        47\r\n        22\r\n        29\r\n        8\r\n        37\r\n        5\r\n        1\r\n        27`\r\n    );\r\n}\r\n"]}