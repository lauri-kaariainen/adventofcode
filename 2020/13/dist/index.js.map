{"version":3,"sources":["../../../helpmodule.js","index.ts"],"names":["find4","x","y","matrix","wantedChar","returnable","length","push","get8","positions","forEach","pos","undefined","num2letter","chr","String","fromCharCode","hex2bin","hex","nulls","nullAmount","Array","map","e","join","parseInt","toString","substr","num2hex","num","swapPositions","arr","index1","index2","insertValueAtMutating","index","newValue","splice","arrayRotate","reverse","unshift","pop","shift","trampoline","fn","uniqueShallow","item","i","slice","includes","uniqueDeep","some","other","JSON","stringify","combineMatrices","larger","smaller","largerLine","lineNum","startPoint","Math","floor","char","charNum","flatten","reduce","flat","toFlatten","concat","isArray","insert","array","rest","reduceSum","acc","next","reduceMultiply","reduceFlatten","permutations","xs","ret","j","returnUniqueAmountsAsObj","val","betweenOrEqual","number","min","max"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const find4 = (x, y, matrix, wantedChar) => {\n  wantedChar = wantedChar || 1;\n  let returnable = [];\n  if (x > 0 && x < matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === 0) {\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n  }\n  if (y > 0 && y < matrix.length - 1) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  } else if (y === 0) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n  } else if (y === matrix.length - 1) {\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  }\n  return returnable;\n};\n\nconst get8 = (x, y, matrix) => {\n  const positions = [\n    {y: y - 1, x: x - 1},\n    {y: y - 1, x: x},\n    {y: y - 1, x: x + 1},\n    {y: y, x: x + 1},\n    {y: y + 1, x: x + 1},\n    {y: y + 1, x: x},\n    {y: y + 1, x: x - 1},\n    {y: y, x: x - 1},\n  ]\n  const returnable = [];\n  positions.forEach(pos =>\n    matrix[pos.y] === undefined ? \"\" :\n      matrix[pos.y][pos.x] === undefined ? \"\" :\n        returnable\n          .push(matrix[pos.y][pos.x]));\n  return returnable;\n}\n\n\n\nconst num2letter = chr => String.fromCharCode(97 + chr);\n\nconst hex2bin = (hex, nulls) => {\n  const nullAmount = nulls || 4;\n  return (\n    [...Array(nullAmount)].map(e => \"0\").join(\"\") +\n    parseInt(hex, 16).toString(2)\n  ).substr(-nullAmount);\n};\n\nconst num2hex = num => num.toString(16);\n\nconst swapPositions = (arr, index1, index2) => (\n  //console.log(arr, index1, index2),\n  ([arr[index1], arr[index2]] = [arr[index2], arr[index1]]), arr\n);\n\nconst insertValueAtMutating = (arr, index, newValue) => {\n  arr\n    .splice(index, 1, newValue);\n  // .map(e => e.map ? e.map(i => i) : e) //clone\n  return arr\n}\n\n\nconst arrayRotate = (arr, reverse) => (\n  reverse ? arr.unshift(arr.pop()) : arr.push(arr.shift()), arr\n);\n\nconst trampoline = fn => {\n  while (typeof fn === \"function\") {\n    fn = fn();\n  }\n  return fn;\n};\n\nconst uniqueShallow = (item, i, arr) => !arr.slice(i + 1).includes(item);\n\nconst uniqueDeep = (item, i, arr) =>\n  !arr\n    .slice(i + 1)\n    .some(other => JSON.stringify(other) === JSON.stringify(item));\n\nconst combineMatrices = (larger, smaller) =>\n  larger\n    //clone\n    .map(e => e.map(i => i))\n    .map((largerLine, lineNum) => {\n      const startPoint = Math.floor(\n        (largerLine.length - smaller[0].length) / 2\n      );\n      if (lineNum >= startPoint && lineNum < larger.length - startPoint) {\n        return largerLine.map((char, charNum) => {\n          if (\n            charNum >= startPoint &&\n            charNum < largerLine.length - startPoint\n          ) {\n            return smaller[lineNum - startPoint][charNum - startPoint];\n          } else {\n            return char;\n          }\n        });\n      } else {\n        return largerLine;\n      }\n    });\n\nconst flatten = arr =>\n  arr.reduce(\n    (flat, toFlatten) =>\n      flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten),\n    []\n  );\n\nconst insert = function (array, i, ...rest) {\n  return array.slice(0, i).concat(rest, array.slice(i));\n}\n\nconst reduceSum = (acc, next) =>\n  acc + next;\n\nconst reduceMultiply = (acc, next) =>\n  acc * next;\n\nconst reduceFlatten = (acc, next) =>\n  acc.concat(next);\n\n\nconst permutations = xs => {\n  let ret = [];\n\n  for (let i = 0; i < xs.length; i = i + 1) {\n    let rest = permutations(xs.slice(0, i).concat(xs.slice(i + 1)));\n\n    if (!rest.length) {\n      ret.push([xs[i]])\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        ret.push([xs[i]].concat(rest[j]))\n      }\n    }\n  }\n  return ret;\n}\n\nconst returnUniqueAmountsAsObj = array =>\n  array.reduce((acc, val) => {  //amounts as an object\n    acc[val] = acc[val] === undefined ? 1 : acc[val] += 1;\n    return acc;\n  }, {});\n\nconst betweenOrEqual = (number, min, max) =>\n  number >= min && number <= max\n\nexport {\n  find4,\n  get8,\n  num2letter,\n  hex2bin,\n  num2hex,\n  swapPositions,\n  insertValueAtMutating,\n  arrayRotate,\n  trampoline,\n  uniqueShallow,\n  uniqueDeep,\n  combineMatrices,\n  flatten,\n  insert,\n  reduceSum,\n  reduceMultiply,\n  reduceFlatten,\n  permutations,\n  returnUniqueAmountsAsObj,\n  betweenOrEqual\n}","import { trampoline } from \"../../../helpmodule.js\";\r\n\r\nconst startTime = new Date().getTime()\r\n\r\n// const checkIfNumIsCorrect = (\r\n//     leaveTime: number,\r\n//     item: { id: number, position: number }): boolean =>\r\n//     leaveTime + item.position %\r\n\r\n\r\nconst recursivelyFindCorrectTimeB = (\r\n    inputObjs: { id: number, position: number }[],\r\n    multiplicator: number = 1,\r\n    step: number = 0\r\n): Function | number =>\r\n    inputObjs.find((obj: any) =>\r\n        (inputObjs[0].id * multiplicator + obj.position) % obj.id !== 0) ?\r\n        //note extra function, for the trampoline\r\n        () => recursivelyFindCorrectTimeB(inputObjs, multiplicator + 1, step + 1) :\r\n        multiplicator\r\n\r\nconst inputUsed = getTestInput3()\r\n\r\nconst departTime = parseInt(inputUsed.split(\"\\n\")[0])\r\n\r\nlog(\"a:\\n\",\r\n    inputUsed\r\n        .split(\"\\n\")[1]\r\n        .split(\",\")\r\n        .map(e => parseInt(e))\r\n        .map((id: number) => ({ id: id, closest: Math.ceil(departTime / id) * id - departTime }))\r\n        .filter((obj: { id: number, closest: number }) => !isNaN(obj.id))\r\n        .sort((a: any, b: any) => a.closest - b.closest)\r\n        .map((item): number => item.id * item.closest)[0]\r\n\r\n\r\n)\r\n\r\nconst firstDepartureId = parseInt(inputUsed.split(\"\\n\")[1])\r\n\r\nlog(\"b:\",\r\n    trampoline(\r\n        recursivelyFindCorrectTimeB(\r\n\r\n            inputUsed\r\n                .split(\"\\n\")[1]\r\n                .split(\",\")\r\n                .map(e => parseInt(e))\r\n                .map((id: number, i: number) => ({ id: id, position: i }))\r\n                .filter((obj: any) => !isNaN(obj.id))\r\n        )\r\n    ) * firstDepartureId\r\n)\r\n\r\nlog(\r\n    \"everything took\",\r\n    new Date().getTime() - startTime,\r\n    \"ms\"\r\n)\r\n\r\nfunction log(...args: any[]): void {\r\n    if (typeof (console) !== 'undefined') {\r\n        console.log(...args);\r\n        document.querySelector('pre')!.innerHTML += \"<br/>\" + args.join(\" \");\r\n    }\r\n}\r\n\r\n\r\nfunction getTestInput(): string {\r\n    return (`939\r\n    7,13,x,x,59,x,31,19`)\r\n}\r\n\r\nfunction getTestInput2(): string {\r\n    return (`939\r\n    67,7,59,61`)\r\n}\r\nfunction getTestInput3(): string {\r\n    return (`939\r\n    1789,37,47,1889`)\r\n}\r\n\r\n\r\n\r\nfunction getInput(): string {\r\n    return (\r\n        `1002461\r\n        29,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,41,x,x,x,x,x,x,x,x,x,521,x,x,x,x,x,x,x,23,x,x,x,x,13,x,x,x,17,x,x,x,x,x,x,x,x,x,x,x,x,x,601,x,x,x,x,x,37,x,x,x,x,x,x,x,x,x,x,x,x,19`\r\n    );\r\n}\r\n"]}