{"version":3,"sources":["../../../helpmodule.js","index.ts"],"names":["find4","x","y","matrix","wantedChar","returnable","length","push","get8","positions","forEach","pos","undefined","num2letter","chr","String","fromCharCode","hex2bin","hex","nulls","nullAmount","Array","map","e","join","parseInt","toString","substr","num2hex","num","swapPositions","arr","index1","index2","insertValueAtMutating","index","newValue","splice","arrayRotate","reverse","unshift","pop","shift","trampoline","fn","uniqueShallow","item","i","slice","includes","uniqueDeep","some","other","JSON","stringify","combineMatrices","larger","smaller","largerLine","lineNum","startPoint","Math","floor","char","charNum","flatten","reduce","flat","toFlatten","concat","isArray","insert","array","rest","reduceSum","acc","next","reduceMultiply","reduceFlatten","permutations","xs","ret","j","returnUniqueAmountsAsObj","val","betweenOrEqual","number","min","max"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const find4 = (x, y, matrix, wantedChar) => {\n  wantedChar = wantedChar || 1;\n  let returnable = [];\n  if (x > 0 && x < matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === 0) {\n    matrix[y][x + 1] === wantedChar\n      ? returnable.push({x: x + 1, y: y})\n      : false;\n  } else if (x === matrix[y].length - 1) {\n    matrix[y][x - 1] === wantedChar\n      ? returnable.push({x: x - 1, y: y})\n      : false;\n  }\n  if (y > 0 && y < matrix.length - 1) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  } else if (y === 0) {\n    matrix[y + 1][x] === wantedChar\n      ? returnable.push({x: x, y: y + 1})\n      : false;\n  } else if (y === matrix.length - 1) {\n    matrix[y - 1][x] === wantedChar\n      ? returnable.push({x: x, y: y - 1})\n      : false;\n  }\n  return returnable;\n};\n\nconst get8 = (x, y, matrix) => {\n  const positions = [\n    {y: y - 1, x: x - 1},\n    {y: y - 1, x: x},\n    {y: y - 1, x: x + 1},\n    {y: y, x: x + 1},\n    {y: y + 1, x: x + 1},\n    {y: y + 1, x: x},\n    {y: y + 1, x: x - 1},\n    {y: y, x: x - 1},\n  ]\n  const returnable = [];\n  positions.forEach(pos =>\n    matrix[pos.y] === undefined ? \"\" :\n      matrix[pos.y][pos.x] === undefined ? \"\" :\n        returnable\n          .push(matrix[pos.y][pos.x]));\n  return returnable;\n}\n\n\n\nconst num2letter = chr => String.fromCharCode(97 + chr);\n\nconst hex2bin = (hex, nulls) => {\n  const nullAmount = nulls || 4;\n  return (\n    [...Array(nullAmount)].map(e => \"0\").join(\"\") +\n    parseInt(hex, 16).toString(2)\n  ).substr(-nullAmount);\n};\n\nconst num2hex = num => num.toString(16);\n\nconst swapPositions = (arr, index1, index2) => (\n  //console.log(arr, index1, index2),\n  ([arr[index1], arr[index2]] = [arr[index2], arr[index1]]), arr\n);\n\nconst insertValueAtMutating = (arr, index, newValue) => {\n  arr\n    .splice(index, 1, newValue);\n  // .map(e => e.map ? e.map(i => i) : e) //clone\n  return arr\n}\n\n\nconst arrayRotate = (arr, reverse) => (\n  reverse ? arr.unshift(arr.pop()) : arr.push(arr.shift()), arr\n);\n\nconst trampoline = fn => {\n  while (typeof fn === \"function\") {\n    fn = fn();\n  }\n  return fn;\n};\n\nconst uniqueShallow = (item, i, arr) => !arr.slice(i + 1).includes(item);\n\nconst uniqueDeep = (item, i, arr) =>\n  !arr\n    .slice(i + 1)\n    .some(other => JSON.stringify(other) === JSON.stringify(item));\n\nconst combineMatrices = (larger, smaller) =>\n  larger\n    //clone\n    .map(e => e.map(i => i))\n    .map((largerLine, lineNum) => {\n      const startPoint = Math.floor(\n        (largerLine.length - smaller[0].length) / 2\n      );\n      if (lineNum >= startPoint && lineNum < larger.length - startPoint) {\n        return largerLine.map((char, charNum) => {\n          if (\n            charNum >= startPoint &&\n            charNum < largerLine.length - startPoint\n          ) {\n            return smaller[lineNum - startPoint][charNum - startPoint];\n          } else {\n            return char;\n          }\n        });\n      } else {\n        return largerLine;\n      }\n    });\n\nconst flatten = arr =>\n  arr.reduce(\n    (flat, toFlatten) =>\n      flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten),\n    []\n  );\n\nconst insert = function (array, i, ...rest) {\n  return array.slice(0, i).concat(rest, array.slice(i));\n}\n\nconst reduceSum = (acc, next) =>\n  acc + next;\n\nconst reduceMultiply = (acc, next) =>\n  acc * next;\n\nconst reduceFlatten = (acc, next) =>\n  acc.concat(next);\n\n\nconst permutations = xs => {\n  let ret = [];\n\n  for (let i = 0; i < xs.length; i = i + 1) {\n    let rest = permutations(xs.slice(0, i).concat(xs.slice(i + 1)));\n\n    if (!rest.length) {\n      ret.push([xs[i]])\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        ret.push([xs[i]].concat(rest[j]))\n      }\n    }\n  }\n  return ret;\n}\n\nconst returnUniqueAmountsAsObj = array =>\n  array.reduce((acc, val) => {  //amounts as an object\n    acc[val] = acc[val] === undefined ? 1 : acc[val] += 1;\n    return acc;\n  }, {});\n\nconst betweenOrEqual = (number, min, max) =>\n  number >= min && number <= max\n\nexport {\n  find4,\n  get8,\n  num2letter,\n  hex2bin,\n  num2hex,\n  swapPositions,\n  insertValueAtMutating,\n  arrayRotate,\n  trampoline,\n  uniqueShallow,\n  uniqueDeep,\n  combineMatrices,\n  flatten,\n  insert,\n  reduceSum,\n  reduceMultiply,\n  reduceFlatten,\n  permutations,\n  returnUniqueAmountsAsObj,\n  betweenOrEqual\n}","import { trampoline } from \"../../../helpmodule.js\";\r\n\r\nconst TEST_PREAMBLE = 5;\r\nconst PREAMBLE = 25;\r\n\r\n\r\n\r\nconst checkNumCorrectness = (num: number, preamble: number[]): boolean =>\r\n    undefined !== preamble\r\n        .find((preambleNum: number, i: number, arr: number[]) =>\r\n            arr.find((anotherNum: number) =>\r\n                anotherNum + preambleNum === num &&\r\n                anotherNum !== preambleNum) !== undefined)\r\n\r\nconst recursivelyFindContiguousSet = (\r\n    list: number[],\r\n    target: number,\r\n    length: number = 1,\r\n    position: number = 0,\r\n    step = 0):\r\n    Function => (): Function | number[] => { //note extra function wrap for trampoline!!\r\n        if (step % 1000 === 0)\r\n            console.log(`currently on line ${position} of ${list.length}`)\r\n\r\n        const getSum =\r\n            list\r\n                .slice(position, length)\r\n                .reduce((sum: number, next: number) => sum + next, 0)\r\n\r\n        return getSum === target ?\r\n            list.slice(position, length) :\r\n            recursivelyFindContiguousSet(\r\n                list,\r\n                target,\r\n                getSum >= target ? 1 : length + 1,\r\n                getSum >= target ? position + 1 : position,\r\n                step + 1\r\n            )\r\n    }\r\n\r\n\r\n\r\nconst numForA: number =\r\n    getInput()\r\n        .split(/\\s*\\n\\s*/)\r\n        .map((str: string): number => parseInt(str))\r\n        .find((num: number, i: number, arr: number[]): boolean =>\r\n            i >= PREAMBLE ?\r\n                !checkNumCorrectness(num, arr.slice(i - PREAMBLE, i)) :\r\n                false\r\n        ) as number\r\n\r\n\r\nconst listForB: number[] =\r\n    trampoline(\r\n\r\n        recursivelyFindContiguousSet(\r\n            getInput()\r\n                .split(/\\s*\\n\\s*/)\r\n                .map((str: string): number => parseInt(str)),\r\n            numForA\r\n        )\r\n    )\r\n\r\nlog(\"a:\",\r\n\r\n    numForA\r\n)\r\n\r\nlog(\"b:\",\r\n    Math.max(...listForB) + Math.min(...listForB)\r\n\r\n)\r\n\r\n\r\nfunction log(...args: any[]): void {\r\n    if (typeof (console) !== 'undefined') {\r\n        console.log(...args);\r\n        document.querySelector('pre')!.innerHTML += \"<br/>\" + args.join(\" \");\r\n    }\r\n}\r\n\r\n\r\nfunction getTestInput(): string {\r\n    return (`35\r\n    20\r\n    15\r\n    25\r\n    47\r\n    40\r\n    62\r\n    55\r\n    65\r\n    95\r\n    102\r\n    117\r\n    150\r\n    182\r\n    127\r\n    219\r\n    299\r\n    277\r\n    309\r\n    576`)\r\n}\r\n\r\nfunction getInput(): string {\r\n    return (\r\n        `19\r\n        30\r\n        13\r\n        31\r\n        42\r\n        41\r\n        44\r\n        34\r\n        39\r\n        6\r\n        47\r\n        50\r\n        36\r\n        33\r\n        32\r\n        15\r\n        43\r\n        8\r\n        26\r\n        24\r\n        48\r\n        5\r\n        3\r\n        10\r\n        1\r\n        20\r\n        4\r\n        7\r\n        9\r\n        22\r\n        11\r\n        12\r\n        16\r\n        13\r\n        14\r\n        17\r\n        6\r\n        28\r\n        57\r\n        18\r\n        19\r\n        15\r\n        21\r\n        8\r\n        23\r\n        24\r\n        25\r\n        5\r\n        26\r\n        10\r\n        27\r\n        20\r\n        29\r\n        30\r\n        33\r\n        22\r\n        43\r\n        78\r\n        31\r\n        32\r\n        41\r\n        11\r\n        13\r\n        16\r\n        56\r\n        28\r\n        37\r\n        40\r\n        15\r\n        35\r\n        18\r\n        38\r\n        21\r\n        23\r\n        24\r\n        70\r\n        34\r\n        26\r\n        45\r\n        27\r\n        102\r\n        29\r\n        33\r\n        36\r\n        108\r\n        31\r\n        32\r\n        39\r\n        41\r\n        42\r\n        46\r\n        78\r\n        50\r\n        56\r\n        44\r\n        47\r\n        48\r\n        152\r\n        104\r\n        84\r\n        64\r\n        68\r\n        53\r\n        58\r\n        136\r\n        60\r\n        61\r\n        67\r\n        106\r\n        71\r\n        63\r\n        73\r\n        80\r\n        88\r\n        108\r\n        90\r\n        97\r\n        114\r\n        148\r\n        143\r\n        118\r\n        198\r\n        133\r\n        111\r\n        121\r\n        117\r\n        113\r\n        161\r\n        124\r\n        123\r\n        131\r\n        256\r\n        130\r\n        134\r\n        136\r\n        222\r\n        153\r\n        185\r\n        178\r\n        233\r\n        203\r\n        208\r\n        232\r\n        234\r\n        245\r\n        224\r\n        237\r\n        228\r\n        274\r\n        244\r\n        230\r\n        236\r\n        276\r\n        267\r\n        253\r\n        398\r\n        264\r\n        266\r\n        356\r\n        289\r\n        397\r\n        661\r\n        436\r\n        381\r\n        411\r\n        440\r\n        609\r\n        452\r\n        458\r\n        525\r\n        889\r\n        496\r\n        464\r\n        666\r\n        466\r\n        565\r\n        500\r\n        517\r\n        520\r\n        519\r\n        530\r\n        553\r\n        702\r\n        686\r\n        893\r\n        792\r\n        894\r\n        957\r\n        1132\r\n        851\r\n        892\r\n        1453\r\n        982\r\n        1478\r\n        1409\r\n        985\r\n        930\r\n        964\r\n        1422\r\n        966\r\n        1017\r\n        1019\r\n        1036\r\n        1221\r\n        1818\r\n        1232\r\n        1239\r\n        2053\r\n        1537\r\n        1643\r\n        1684\r\n        1912\r\n        1743\r\n        1781\r\n        1815\r\n        1822\r\n        1894\r\n        2249\r\n        1947\r\n        3065\r\n        1896\r\n        1930\r\n        2036\r\n        2460\r\n        2779\r\n        2923\r\n        2471\r\n        4513\r\n        2453\r\n        2769\r\n        2882\r\n        3020\r\n        3590\r\n        3427\r\n        5018\r\n        3728\r\n        3524\r\n        3558\r\n        3596\r\n        4924\r\n        3966\r\n        4699\r\n        4720\r\n        8223\r\n        4918\r\n        11951\r\n        6043\r\n        4496\r\n        4913\r\n        5232\r\n        8147\r\n        5222\r\n        5335\r\n        8471\r\n        5651\r\n        8054\r\n        6447\r\n        6951\r\n        14918\r\n        7082\r\n        13398\r\n        10145\r\n        8462\r\n        7562\r\n        9414\r\n        8665\r\n        9195\r\n        9638\r\n        10150\r\n        9409\r\n        9718\r\n        9728\r\n        9831\r\n        10567\r\n        10454\r\n        10557\r\n        10873\r\n        10986\r\n        16033\r\n        12098\r\n        19142\r\n        17200\r\n        16024\r\n        17860\r\n        14644\r\n        18916\r\n        16227\r\n        16757\r\n        25864\r\n        18074\r\n        19549\r\n        18833\r\n        19047\r\n        19559\r\n        19127\r\n        20285\r\n        29483\r\n        21430\r\n        21011\r\n        28855\r\n        54719\r\n        36318\r\n        31647\r\n        31014\r\n        50789\r\n        51299\r\n        36987\r\n        30668\r\n        31401\r\n        35060\r\n        32984\r\n        34301\r\n        34831\r\n        36907\r\n        37121\r\n        37880\r\n        56713\r\n        38174\r\n        40989\r\n        81803\r\n        41296\r\n        42441\r\n        49866\r\n        69527\r\n        63048\r\n        61682\r\n        62415\r\n        62661\r\n        65499\r\n        62069\r\n        63652\r\n        65702\r\n        64385\r\n        67285\r\n        70105\r\n        78417\r\n        69132\r\n        71738\r\n        94593\r\n        75001\r\n        76054\r\n        100243\r\n        131793\r\n        83430\r\n        105681\r\n        83737\r\n        104123\r\n        111548\r\n        142286\r\n        128117\r\n        123751\r\n        142069\r\n        124730\r\n        125721\r\n        126454\r\n        130087\r\n        131670\r\n        195489\r\n        136417\r\n        139237\r\n        217287\r\n        170647\r\n        155168\r\n        151055\r\n        158431\r\n        260168\r\n        167167\r\n        211547\r\n        187553\r\n        187860\r\n        258124\r\n        234210\r\n        236278\r\n        248481\r\n        249472\r\n        303584\r\n        250451\r\n        285255\r\n        252175\r\n        286838\r\n        266504\r\n        268087\r\n        474698\r\n        294848\r\n        329078\r\n        306223\r\n        419342\r\n        318222\r\n        309486\r\n        378714\r\n        535706\r\n        354720\r\n        375413\r\n        421763\r\n        422070\r\n        470488\r\n        519465\r\n        484759\r\n        497953\r\n        551759\r\n        539013\r\n        516955\r\n        575990\r\n        534591\r\n        649568\r\n        954704\r\n        577573\r\n        601071\r\n        604334\r\n        615709\r\n        624445\r\n        733434\r\n        627708\r\n        664206\r\n        839479\r\n        976484\r\n        776483\r\n        797176\r\n        1090772\r\n        892558\r\n        1331767\r\n        1144663\r\n        982712\r\n        1014908\r\n        1215965\r\n        1404191\r\n        1334505\r\n        1110581\r\n        1380817\r\n        1178644\r\n        1181907\r\n        2346675\r\n        1803089\r\n        1220043\r\n        1573659\r\n        1252153\r\n        1291914\r\n        2583920\r\n        1615962\r\n        1887064\r\n        2192449\r\n        2350142\r\n        1689734\r\n        2947752\r\n        1875270\r\n        2159571\r\n        1997620\r\n        3303030\r\n        2125489\r\n        2289225\r\n        3291255\r\n        4594944\r\n        2292488\r\n        3127423\r\n        2360551\r\n        4233739\r\n        2825812\r\n        4045855\r\n        2511957\r\n        6522964\r\n        2544067\r\n        2907876\r\n        3305696\r\n        4669556\r\n        9825994\r\n        3565004\r\n        3687354\r\n        3815223\r\n        4290108\r\n        3872890\r\n        4123109\r\n        4649776\r\n        4414714\r\n        4417977\r\n        6635066\r\n        4653039\r\n        4872508\r\n        10450289\r\n        4904618\r\n        5056024\r\n        5337769\r\n        5369879\r\n        5451943\r\n        5419833\r\n        5849763\r\n        6109071\r\n        7197984\r\n        7178586\r\n        8621028\r\n        11301695\r\n        7252358\r\n        8525929\r\n        8995617\r\n        8777508\r\n        7995999\r\n        8537823\r\n        12070492\r\n        8832691\r\n        16617027\r\n        9525547\r\n        11831625\r\n        10324451\r\n        9960642\r\n        22726098\r\n        10393793\r\n        14447560\r\n        10789712\r\n        10871776\r\n        16502864\r\n        11958834\r\n        13361429\r\n        15873386\r\n        17576809\r\n        16521928\r\n        15248357\r\n        15778287\r\n        16533822\r\n        17315331\r\n        16773507\r\n        16828690\r\n        20664316\r\n        18358238\r\n        18793333\r\n        19486189\r\n        24772011\r\n        20285093\r\n        30609544\r\n        20354435\r\n        21183505\r\n        21265569\r\n        42568378\r\n        27563219\r\n        27207191\r\n        29883357\r\n        32021864\r\n        28609786\r\n        31026644\r\n        31770285\r\n        31782179\r\n        32077047\r\n        32312109\r\n        33307329\r\n        45955516\r\n        39771282\r\n        36314879\r\n        40058902\r\n        39147768\r\n        51508053\r\n        39840624\r\n        60413337\r\n        69775569\r\n        41537940\r\n        67757554\r\n        42449074\r\n        53577678\r\n        62195466\r\n        54770410\r\n        55816977\r\n        58493143\r\n        59636430\r\n        60380071\r\n        62796929\r\n        63552464\r\n        72135949\r\n        64389156\r\n        88077739\r\n        72455097\r\n        82270395\r\n        78763953\r\n        97640911\r\n        78988392\r\n        158054248\r\n        81378564\r\n        82289698\r\n        117966834\r\n        83987014\r\n        130554483\r\n        141906825\r\n        173003557\r\n        108348088\r\n        121290072\r\n        185718650\r\n        114310120\r\n        118129573\r\n        160213688\r\n        255273952\r\n        126349393\r\n        164560093\r\n        136525105\r\n        136844253\r\n        151219050\r\n        154744795\r\n        195688684\r\n        157752345\r\n        160366956\r\n        161278090\r\n        163668262\r\n        196599818\r\n        208639091\r\n        192335102\r\n        198297134\r\n        226477661\r\n        234697481\r\n        222658208\r\n        232439693\r\n        416552042\r\n        250835225\r\n        387360330\r\n        244478966\r\n        262874498\r\n        314887312\r\n        263193646\r\n        273369358\r\n        321645046\r\n        288063303\r\n        567771092\r\n        451731565\r\n        402231311\r\n        318119301\r\n        324035218\r\n        485851854\r\n        356003364\r\n        388934920\r\n        406936225\r\n        556342527\r\n        420955342\r\n        449135869\r\n        510721511\r\n        467137174\r\n        495314191\r\n        507353464\r\n        764023181\r\n        393911906\r\n        532542269\r\n        526068144\r\n        578080958\r\n        561432661\r\n        591488659\r\n        909584775\r\n        676998223\r\n        642154519\r\n        674122665\r\n        680038582\r\n        739074643\r\n        1036789655\r\n        912345891\r\n        805139233\r\n        814867248\r\n        919980050\r\n        1446048194\r\n        1404898966\r\n        1684003231\r\n        1355511840\r\n        1068786125\r\n        2760410806\r\n        1036066425\r\n        926454175\r\n        1070910129\r\n        1255079181\r\n        1087500805\r\n        2035550422\r\n        1727213139\r\n        2715589004\r\n        1316277184\r\n        1678220944\r\n        1322193101\r\n        1586468556\r\n        2657378685\r\n        1544213876\r\n        1620006481\r\n        1717485124\r\n        2106976554\r\n        1734847298\r\n        1962520600\r\n        2242731359\r\n        2385063309\r\n        3926734590\r\n        3697367898\r\n        2546460656\r\n        1997364304\r\n        2248647276\r\n        2013954980\r\n        2631714681\r\n        2707507286\r\n        2403777989\r\n        2866406977\r\n        3617370785\r\n        3559008543\r\n        2638470285\r\n        2908661657\r\n        3057040399\r\n        4601254275\r\n        3164220357\r\n        7176379328\r\n        3337491605\r\n        3976475580\r\n        3732211602\r\n        3748802278\r\n        3959884904\r\n        5406951716\r\n        4246011580\r\n        5556372847\r\n        4262602256\r\n        4011319284\r\n        4401142293\r\n        6643033965\r\n        4417732969\r\n        5035492670\r\n        5923447376\r\n        5042248274\r\n        6246153262\r\n        5547131942\r\n        11470579318\r\n        5695510684\r\n        5965702056\r\n        6221260756\r\n        7086293883\r\n        6501711962\r\n        7313967185\r\n        9298094926\r\n        8791050552\r\n        16612062111\r\n        9436634963\r\n        9516257751\r\n        8412461577\r\n        8257330864\r\n        8273921540\r\n        8429052253\r\n        14394754309\r\n        8818875262\r\n        9453225639\r\n        9459981243\r\n        10077740944\r\n        25910157037\r\n        10589380216\r\n        11242642626\r\n        11512833998\r\n        13815679147\r\n        11661212740\r\n        19935134280\r\n        16702973793\r\n        13588005845\r\n        15292762514\r\n        18351662484\r\n        21590574942\r\n        16531252404\r\n        17790179291\r\n        27788297447\r\n        24943713981\r\n        16686383117\r\n        17076206126\r\n        17727147179\r\n        35987897981\r\n        18272100901\r\n        18278856505\r\n        27804888123\r\n        25249218585\r\n        20667121160\r\n        27275763333\r\n        21832022842\r\n        22755476624\r\n        34882914888\r\n        28364186533\r\n        29933313641\r\n        46156550607\r\n        30290979638\r\n        31860106746\r\n        31824014918\r\n        33217635521\r\n        33607458530\r\n        34258399583\r\n        54266754486\r\n        33762589243\r\n        34958484018\r\n        44881094249\r\n        55639949866\r\n        40110879347\r\n        36550957406\r\n        38939222061\r\n        41034333129\r\n        61038352576\r\n        42499144002\r\n        43422597784\r\n        89149669374\r\n        68565942548\r\n        65254620626\r\n        84991973596\r\n        58297500174\r\n        60224293279\r\n        75069363365\r\n        62114994556\r\n        69216883601\r\n        97073478574\r\n        90817711892\r\n        70313546649\r\n        68721073261\r\n        101054216617\r\n        71509441424\r\n        95996836594\r\n        115180242712\r\n        75490179467\r\n        76661836753\r\n        77585290535\r\n        79973555190\r\n        112143671045\r\n        85921741786\r\n        101720097958\r\n        162328099200\r\n        118521793453\r\n        170791267082\r\n        120412494730\r\n        122339287835\r\n        127018573435\r\n        146975383402\r\n        137937956862\r\n        131331878157\r\n        139034619910\r\n        140230514685\r\n        173582127129\r\n        141822988073\r\n        169775289878\r\n        211177079306\r\n        146999620891\r\n        152152016220\r\n        154247127288\r\n        153075470002\r\n        239162244480\r\n        157558845725\r\n        307322597290\r\n        187641839744\r\n        204443535239\r\n        233051976115\r\n        238934288183\r\n        253671165992\r\n        259447114640\r\n        329464827817\r\n        284407348159\r\n        518499676596\r\n        270366498067\r\n        406634103244\r\n        509528742547\r\n        279265134595\r\n        293305984687\r\n        288822608964\r\n        327334135603\r\n        476464448708\r\n        299151637111\r\n        300075090893\r\n        305227486222\r\n        552753099327\r\n        310634315727\r\n        443605779719\r\n        390610821840\r\n        392085374983\r\n        509671021461\r\n        437495511354\r\n        526357960802\r\n        492605454175\r\n        513118280632\r\n        529813612707\r\n        569518135178\r\n        610709406620\r\n        575593984289\r\n        549631632662\r\n        568087743559\r\n        604379123333\r\n        671350509578\r\n        598533470909\r\n        587974246075\r\n        1026096081370\r\n        599226728004\r\n        791757091286\r\n        1079189156639\r\n        996464498316\r\n        754240095446\r\n        748129827081\r\n        782696196823\r\n        828106333194\r\n        829580886337\r\n        930100965529\r\n        987127144016\r\n        1105407596996\r\n        1022419066882\r\n        1111651751541\r\n        1079445245369\r\n        1137605878737\r\n        1117719376221\r\n        1166621214468\r\n        1148165103571\r\n        1370670442898\r\n        1186507716984\r\n        1187200974079\r\n        1584438744391\r\n        1342214341521\r\n        1347356555085\r\n        1353466823450\r\n        1545997186732\r\n        1502369922527\r\n        1530826023904\r\n        2300771408427\r\n        2243013475733\r\n        1610802530017\r\n        2495521658656\r\n        1816708030353\r\n        1917228109545\r\n        2009546210898\r\n        3827452220124\r\n        2160024945619\r\n        2581815167896\r\n        2648545400125\r\n        2255325254958\r\n        2518835546469\r\n        2314786318039\r\n        2334672820555\r\n        2373708691063\r\n        2528722058505\r\n        2529415315600\r\n        2689570896606\r\n        2700823378535\r\n        3319077952880\r\n        2899464010182\r\n        3911573938444\r\n        3033195946431\r\n        3347534054257\r\n        3427510560370\r\n        3528030639562\r\n        3620348740915\r\n        3733936139898\r\n        3926774320443\r\n        4077253055164\r\n        4169571156517\r\n        4415350200577\r\n        5015609696574\r\n        4570111572997\r\n        4833621864508\r\n        8481685511441\r\n        4649459138594\r\n        6261447140998\r\n        4708381511618\r\n        7733085874690\r\n        5932659956613\r\n        5218986212206\r\n        11171256408047\r\n        5600287388717\r\n        6427494649744\r\n        11810338929854\r\n        6380730000688\r\n        6460706506801\r\n        6775044614627\r\n        7161446700268\r\n        8496885893440\r\n        8567558004406\r\n        9723991208192\r\n        8004027375607\r\n        8246824211681\r\n        9064809339171\r\n        13315307375949\r\n        9219570711591\r\n        9278493084615\r\n        9357840650212\r\n        9927367723824\r\n        9868445350800\r\n        17925398654618\r\n        10308668900335\r\n        10819273600923\r\n        13155774615315\r\n        11599716212894\r\n        11981017389405\r\n        15021868826308\r\n        16381017411859\r\n        12841436507489\r\n        20819286924485\r\n        17466394923272\r\n        13936491314895\r\n        19002484292807\r\n        25536207527789\r\n        16250851587288\r\n        20032660108527\r\n        17068836714778\r\n        17311633550852\r\n        25136792004720\r\n        18498063796206\r\n        24245160215230\r\n        19285208374036\r\n        21338858039617\r\n        23975048216238\r\n        22418989813817\r\n        23660710108412\r\n        21127942501258\r\n        22800290990328\r\n        24755490828209\r\n        28668552927672\r\n        27002886215713\r\n        26777927822384\r\n        32631868999147\r\n        29092288094777\r\n        30187342902183\r\n        39869127705106\r\n        31005328029673\r\n        49124948203304`\r\n    );\r\n}"]}